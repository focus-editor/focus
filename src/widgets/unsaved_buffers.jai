unsaved_buffers_dialog_handle_event :: (event: Input.Event) -> bool {
    if event.type == .KEYBOARD && event.key_pressed {
        if event.key_code == {
            case .ESCAPE;       #through;
            case #char "C";     close_unsaved_buffers_dialog();     return true;
            case #char "Y";     #through;
            case #char "S";     unsaved_buffers_save_all();         return true;
            case #char "N";     unsaved_buffers_dialog_proceed();   return true;
        }
    }
    return false;
}

show_unsaved_buffers_dialog :: (requested_mode: Mode = .exit_program) {
    using unsaved_buffers_dialog;

    active_global_widget = .unsaved_buffers_dialog;
    mode = requested_mode;

    array_reset_keeping_memory(*modified_buffers);

    for buffer, buffer_id : open_buffers {
        if buffer.modified && !buffer.readonly array_add(*modified_buffers, buffer_id);
    }
}

close_unsaved_buffers_dialog :: () {
    array_reset_keeping_memory(*unsaved_buffers_dialog.modified_buffers);

    activate_editors();
}

unsaved_buffers_save_all :: () {
    errors_when_saving := false;

    /*
     * When using the built-in save file dialog this loop doesn't make sense - it is written
     * assuming the save dialog runs synchronously (like it does on Windows at this time).
     * When it runs asynchronously there's no easy way to "bounce" back-and-forth between
     * this widget and the save file/confirm overwrite dialogs.
     *
     * TODO: Rethink how this works
     */
    for buffer_id : unsaved_buffers_dialog.modified_buffers {
        buffer := *open_buffers[buffer_id];
        saved := save_buffer_to_disk(buffer, buffer_id);
        if buffer.error_when_saving || !saved then errors_when_saving = true;
    }
    if !errors_when_saving unsaved_buffers_dialog_proceed();
}

unsaved_buffers_dialog_proceed :: () {
    if #complete unsaved_buffers_dialog.mode == {
        case .exit_program;
            force_quit  = true;
            should_quit = true;
        case .reload_workspace;
            should_reload_workspace = true;
    }

    close_unsaved_buffers_dialog();
}

#scope_export

unsaved_buffers_dialog: struct {
    modified_buffers: [..] s64;
    mode: Mode;
};

#scope_file

Mode :: enum {
    exit_program;
    reload_workspace;
}
