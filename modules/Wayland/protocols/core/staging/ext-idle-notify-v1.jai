/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: ext_idle_notify_v1
 */

ext_idle_notifier_v1_interface: wl_interface;
ext_idle_notifier_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *ext_idle_notifier_v1_interface;

    set_user_data :: inline (self: *ext_idle_notifier_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *ext_idle_notifier_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *ext_idle_notifier_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *ext_idle_notifier_v1) #c_call {
        wl_proxy.marshal_flags(
            self, EXT_IDLE_NOTIFIER_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    get_idle_notification :: inline (self: *ext_idle_notifier_v1, timeout: u32, seat: *wl_seat) -> *ext_idle_notification_v1 #c_call {
        ret: *wl_proxy = wl_proxy.marshal_flags(
            self, EXT_IDLE_NOTIFIER_V1_GET_IDLE_NOTIFICATION,
            *ext_idle_notification_v1_interface, wl_proxy.get_version(self), 0,
            null, timeout, seat);
        return cast(*ext_idle_notification_v1) ret;
    }
}

EXT_IDLE_NOTIFIER_V1_DESTROY                     : u32 : 0;
EXT_IDLE_NOTIFIER_V1_GET_IDLE_NOTIFICATION       : u32 : 1;
EXT_IDLE_NOTIFIER_V1_DESTROY_SINCE               : u32 : 1;
EXT_IDLE_NOTIFIER_V1_GET_IDLE_NOTIFICATION_SINCE : u32 : 1;

ext_idle_notification_v1_interface: wl_interface;
ext_idle_notification_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *ext_idle_notification_v1_interface;

    set_user_data :: inline (self: *ext_idle_notification_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *ext_idle_notification_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *ext_idle_notification_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *ext_idle_notification_v1) #c_call {
        wl_proxy.marshal_flags(
            self, EXT_IDLE_NOTIFICATION_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    add_listener :: inline (self: *ext_idle_notification_v1, listener: *ext_idle_notification_v1_listener, data: *void) -> s32 #c_call {
        return wl_proxy.add_listener(self, cast(*generic_c_call) listener, data);
    }
}

EXT_IDLE_NOTIFICATION_V1_DESTROY       : u32 : 0;
EXT_IDLE_NOTIFICATION_V1_DESTROY_SINCE : u32 : 1;
EXT_IDLE_NOTIFICATION_V1_IDLED_SINCE   : u32 : 1;
EXT_IDLE_NOTIFICATION_V1_RESUMED_SINCE : u32 : 1;

ext_idle_notification_v1_listener :: struct {
    idled   := _stubs_.idled;
    resumed := _stubs_.resumed;

    _stubs_ :: struct {
        idled :: (data: *void,
            self: *ext_idle_notification_v1) -> void #c_call {}
        resumed :: (data: *void,
            self: *ext_idle_notification_v1) -> void #c_call {}
    }
}


#scope_module
ext_idle_notify_v1_protocol_init :: () {
    ext_idle_notify_v1_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: ext_idle_notifier_v1::get_idle_notification */
        *ext_idle_notification_v1_interface,   // 1
        null,  // 2
        *wl_seat_interface,   // 3
    ];

    ext_idle_notifier_v1_requests[0] = .{"destroy", "", ext_idle_notify_v1_types_storage.data + 0};
    ext_idle_notifier_v1_requests[1] = .{"get_idle_notification", "nuo", ext_idle_notify_v1_types_storage.data + 1};
    ext_idle_notifier_v1_interface = .{
        "ext_idle_notifier_v1", 1,
        ext_idle_notifier_v1_requests.count, ext_idle_notifier_v1_requests.data,
        0, null,
    };

    ext_idle_notification_v1_requests[0] = .{"destroy", "", ext_idle_notify_v1_types_storage.data + 0};
    ext_idle_notification_v1_events[0] = .{"idled", "", ext_idle_notify_v1_types_storage.data + 0};
    ext_idle_notification_v1_events[1] = .{"resumed", "", ext_idle_notify_v1_types_storage.data + 0};
    ext_idle_notification_v1_interface = .{
        "ext_idle_notification_v1", 1,
        ext_idle_notification_v1_requests.count, ext_idle_notification_v1_requests.data,
        ext_idle_notification_v1_events.count, ext_idle_notification_v1_events.data,
    };
}


#scope_file
ext_idle_notify_v1_types_storage: []*wl_interface;

ext_idle_notifier_v1_requests: [2]wl_message;

ext_idle_notification_v1_requests: [1]wl_message;
ext_idle_notification_v1_events  : [2]wl_message;

#assert size_of(ext_idle_notifier_v1) == 0 "wayland-scanner bug: ext_idle_notifier_v1 is non-empty";
#assert size_of(ext_idle_notification_v1) == 0 "wayland-scanner bug: ext_idle_notification_v1 is non-empty";
