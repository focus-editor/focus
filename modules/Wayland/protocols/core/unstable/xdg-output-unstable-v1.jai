/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: xdg_output_unstable_v1
 */

zxdg_output_manager_v1_interface: wl_interface;
zxdg_output_manager_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_output_manager_v1_interface;

    set_user_data :: inline (self: *zxdg_output_manager_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_output_manager_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_output_manager_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_output_manager_v1) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_OUTPUT_MANAGER_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    get_xdg_output :: inline (self: *zxdg_output_manager_v1, output: *wl_output) -> *zxdg_output_v1 #c_call {
        ret: *wl_proxy = wl_proxy.marshal_flags(
            self, ZXDG_OUTPUT_MANAGER_V1_GET_XDG_OUTPUT,
            *zxdg_output_v1_interface, wl_proxy.get_version(self), 0,
            null, output);
        return cast(*zxdg_output_v1) ret;
    }
}

ZXDG_OUTPUT_MANAGER_V1_DESTROY              : u32 : 0;
ZXDG_OUTPUT_MANAGER_V1_GET_XDG_OUTPUT       : u32 : 1;
ZXDG_OUTPUT_MANAGER_V1_DESTROY_SINCE        : u32 : 1;
ZXDG_OUTPUT_MANAGER_V1_GET_XDG_OUTPUT_SINCE : u32 : 1;

zxdg_output_v1_interface: wl_interface;
zxdg_output_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_output_v1_interface;

    set_user_data :: inline (self: *zxdg_output_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_output_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_output_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_output_v1) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_OUTPUT_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    add_listener :: inline (self: *zxdg_output_v1, listener: *zxdg_output_v1_listener, data: *void) -> s32 #c_call {
        return wl_proxy.add_listener(self, cast(*generic_c_call) listener, data);
    }
}

ZXDG_OUTPUT_V1_DESTROY                : u32 : 0;
ZXDG_OUTPUT_V1_DESTROY_SINCE          : u32 : 1;
ZXDG_OUTPUT_V1_LOGICAL_POSITION_SINCE : u32 : 1;
ZXDG_OUTPUT_V1_LOGICAL_SIZE_SINCE     : u32 : 1;
ZXDG_OUTPUT_V1_DONE_SINCE             : u32 : 1;
ZXDG_OUTPUT_V1_NAME_SINCE             : u32 : 2;
ZXDG_OUTPUT_V1_DESCRIPTION_SINCE      : u32 : 2;

zxdg_output_v1_listener :: struct {
    logical_position := _stubs_.logical_position;
    logical_size     := _stubs_.logical_size;
    done             := _stubs_.done;
    name             := _stubs_.name;
    description      := _stubs_.description;

    _stubs_ :: struct {
        logical_position :: (data: *void,
            self: *zxdg_output_v1,
            x: s32,
            y: s32) -> void #c_call {}
        logical_size :: (data: *void,
            self: *zxdg_output_v1,
            width: s32,
            height: s32) -> void #c_call {}
        done :: (data: *void,
            self: *zxdg_output_v1) -> void #c_call {}
        name :: (data: *void,
            self: *zxdg_output_v1,
            name: *u8) -> void #c_call {}
        description :: (data: *void,
            self: *zxdg_output_v1,
            description: *u8) -> void #c_call {}
    }
}


#scope_module
xdg_output_unstable_v1_protocol_init :: () {
    xdg_output_unstable_v1_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: zxdg_output_manager_v1::get_xdg_output */
        *zxdg_output_v1_interface,   // 1
        *wl_output_interface,   // 2
        /* EVENT: zxdg_output_v1::logical_position */
        null,  // 3
        null,  // 4
        /* EVENT: zxdg_output_v1::logical_size */
        null,  // 5
        null,  // 6
        /* EVENT: zxdg_output_v1::name */
        null,  // 7
        /* EVENT: zxdg_output_v1::description */
        null,  // 8
    ];

    zxdg_output_manager_v1_requests[0] = .{"destroy", "", xdg_output_unstable_v1_types_storage.data + 0};
    zxdg_output_manager_v1_requests[1] = .{"get_xdg_output", "no", xdg_output_unstable_v1_types_storage.data + 1};
    zxdg_output_manager_v1_interface = .{
        "zxdg_output_manager_v1", 3,
        zxdg_output_manager_v1_requests.count, zxdg_output_manager_v1_requests.data,
        0, null,
    };

    zxdg_output_v1_requests[0] = .{"destroy", "", xdg_output_unstable_v1_types_storage.data + 0};
    zxdg_output_v1_events[0] = .{"logical_position", "ii", xdg_output_unstable_v1_types_storage.data + 3};
    zxdg_output_v1_events[1] = .{"logical_size", "ii", xdg_output_unstable_v1_types_storage.data + 5};
    zxdg_output_v1_events[2] = .{"done", "", xdg_output_unstable_v1_types_storage.data + 0};
    zxdg_output_v1_events[3] = .{"name", "s", xdg_output_unstable_v1_types_storage.data + 7};
    zxdg_output_v1_events[4] = .{"description", "s", xdg_output_unstable_v1_types_storage.data + 8};
    zxdg_output_v1_interface = .{
        "zxdg_output_v1", 3,
        zxdg_output_v1_requests.count, zxdg_output_v1_requests.data,
        zxdg_output_v1_events.count, zxdg_output_v1_events.data,
    };
}


#scope_file
xdg_output_unstable_v1_types_storage: []*wl_interface;

zxdg_output_manager_v1_requests: [2]wl_message;

zxdg_output_v1_requests: [1]wl_message;
zxdg_output_v1_events  : [5]wl_message;

#assert size_of(zxdg_output_manager_v1) == 0 "wayland-scanner bug: zxdg_output_manager_v1 is non-empty";
#assert size_of(zxdg_output_v1) == 0 "wayland-scanner bug: zxdg_output_v1 is non-empty";
