/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: xdg_foreign_unstable_v2
 */

zxdg_exporter_v2_interface: wl_interface;
zxdg_exporter_v2 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_exporter_v2_interface;

    /* ENUM: zxdg_exporter_v2::error */
    error_invalid_surface : u32 : 0;

    set_user_data :: inline (self: *zxdg_exporter_v2, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_exporter_v2) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_exporter_v2) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_exporter_v2) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_EXPORTER_V2_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    export_toplevel :: inline (self: *zxdg_exporter_v2, surface: *wl_surface) -> *zxdg_exported_v2 #c_call {
        ret: *wl_proxy = wl_proxy.marshal_flags(
            self, ZXDG_EXPORTER_V2_EXPORT_TOPLEVEL,
            *zxdg_exported_v2_interface, wl_proxy.get_version(self), 0,
            null, surface);
        return cast(*zxdg_exported_v2) ret;
    }
}

ZXDG_EXPORTER_V2_DESTROY               : u32 : 0;
ZXDG_EXPORTER_V2_EXPORT_TOPLEVEL       : u32 : 1;
ZXDG_EXPORTER_V2_DESTROY_SINCE         : u32 : 1;
ZXDG_EXPORTER_V2_EXPORT_TOPLEVEL_SINCE : u32 : 1;

zxdg_importer_v2_interface: wl_interface;
zxdg_importer_v2 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_importer_v2_interface;

    set_user_data :: inline (self: *zxdg_importer_v2, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_importer_v2) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_importer_v2) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_importer_v2) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_IMPORTER_V2_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    import_toplevel :: inline (self: *zxdg_importer_v2, handle: *u8) -> *zxdg_imported_v2 #c_call {
        ret: *wl_proxy = wl_proxy.marshal_flags(
            self, ZXDG_IMPORTER_V2_IMPORT_TOPLEVEL,
            *zxdg_imported_v2_interface, wl_proxy.get_version(self), 0,
            null, handle);
        return cast(*zxdg_imported_v2) ret;
    }
}

ZXDG_IMPORTER_V2_DESTROY               : u32 : 0;
ZXDG_IMPORTER_V2_IMPORT_TOPLEVEL       : u32 : 1;
ZXDG_IMPORTER_V2_DESTROY_SINCE         : u32 : 1;
ZXDG_IMPORTER_V2_IMPORT_TOPLEVEL_SINCE : u32 : 1;

zxdg_exported_v2_interface: wl_interface;
zxdg_exported_v2 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_exported_v2_interface;

    set_user_data :: inline (self: *zxdg_exported_v2, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_exported_v2) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_exported_v2) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_exported_v2) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_EXPORTED_V2_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    add_listener :: inline (self: *zxdg_exported_v2, listener: *zxdg_exported_v2_listener, data: *void) -> s32 #c_call {
        return wl_proxy.add_listener(self, cast(*generic_c_call) listener, data);
    }
}

ZXDG_EXPORTED_V2_DESTROY       : u32 : 0;
ZXDG_EXPORTED_V2_DESTROY_SINCE : u32 : 1;
ZXDG_EXPORTED_V2_HANDLE_SINCE  : u32 : 1;

zxdg_exported_v2_listener :: struct {
    handle := _stubs_.handle;

    _stubs_ :: struct {
        handle :: (data: *void,
            self: *zxdg_exported_v2,
            handle: *u8) -> void #c_call {}
    }
}

zxdg_imported_v2_interface: wl_interface;
zxdg_imported_v2 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_imported_v2_interface;

    /* ENUM: zxdg_imported_v2::error */
    error_invalid_surface : u32 : 0;

    set_user_data :: inline (self: *zxdg_imported_v2, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_imported_v2) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_imported_v2) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_imported_v2) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_IMPORTED_V2_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    set_parent_of :: inline (self: *zxdg_imported_v2, surface: *wl_surface) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_IMPORTED_V2_SET_PARENT_OF,
            null, wl_proxy.get_version(self), 0,
            surface);
    }

    add_listener :: inline (self: *zxdg_imported_v2, listener: *zxdg_imported_v2_listener, data: *void) -> s32 #c_call {
        return wl_proxy.add_listener(self, cast(*generic_c_call) listener, data);
    }
}

ZXDG_IMPORTED_V2_DESTROY             : u32 : 0;
ZXDG_IMPORTED_V2_SET_PARENT_OF       : u32 : 1;
ZXDG_IMPORTED_V2_DESTROY_SINCE       : u32 : 1;
ZXDG_IMPORTED_V2_SET_PARENT_OF_SINCE : u32 : 1;
ZXDG_IMPORTED_V2_DESTROYED_SINCE     : u32 : 1;

zxdg_imported_v2_listener :: struct {
    destroyed := _stubs_.destroyed;

    _stubs_ :: struct {
        destroyed :: (data: *void,
            self: *zxdg_imported_v2) -> void #c_call {}
    }
}


#scope_module
xdg_foreign_unstable_v2_protocol_init :: () {
    xdg_foreign_unstable_v2_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: zxdg_exporter_v2::export_toplevel */
        *zxdg_exported_v2_interface,   // 1
        *wl_surface_interface,   // 2
        /* REQUEST: zxdg_importer_v2::import_toplevel */
        *zxdg_imported_v2_interface,   // 3
        null,  // 4
        /* EVENT: zxdg_exported_v2::handle */
        null,  // 5
        /* REQUEST: zxdg_imported_v2::set_parent_of */
        *wl_surface_interface,   // 6
    ];

    zxdg_exporter_v2_requests[0] = .{"destroy", "", xdg_foreign_unstable_v2_types_storage.data + 0};
    zxdg_exporter_v2_requests[1] = .{"export_toplevel", "no", xdg_foreign_unstable_v2_types_storage.data + 1};
    zxdg_exporter_v2_interface = .{
        "zxdg_exporter_v2", 1,
        zxdg_exporter_v2_requests.count, zxdg_exporter_v2_requests.data,
        0, null,
    };

    zxdg_importer_v2_requests[0] = .{"destroy", "", xdg_foreign_unstable_v2_types_storage.data + 0};
    zxdg_importer_v2_requests[1] = .{"import_toplevel", "ns", xdg_foreign_unstable_v2_types_storage.data + 3};
    zxdg_importer_v2_interface = .{
        "zxdg_importer_v2", 1,
        zxdg_importer_v2_requests.count, zxdg_importer_v2_requests.data,
        0, null,
    };

    zxdg_exported_v2_requests[0] = .{"destroy", "", xdg_foreign_unstable_v2_types_storage.data + 0};
    zxdg_exported_v2_events[0] = .{"handle", "s", xdg_foreign_unstable_v2_types_storage.data + 5};
    zxdg_exported_v2_interface = .{
        "zxdg_exported_v2", 1,
        zxdg_exported_v2_requests.count, zxdg_exported_v2_requests.data,
        zxdg_exported_v2_events.count, zxdg_exported_v2_events.data,
    };

    zxdg_imported_v2_requests[0] = .{"destroy", "", xdg_foreign_unstable_v2_types_storage.data + 0};
    zxdg_imported_v2_requests[1] = .{"set_parent_of", "o", xdg_foreign_unstable_v2_types_storage.data + 6};
    zxdg_imported_v2_events[0] = .{"destroyed", "", xdg_foreign_unstable_v2_types_storage.data + 0};
    zxdg_imported_v2_interface = .{
        "zxdg_imported_v2", 1,
        zxdg_imported_v2_requests.count, zxdg_imported_v2_requests.data,
        zxdg_imported_v2_events.count, zxdg_imported_v2_events.data,
    };
}


#scope_file
xdg_foreign_unstable_v2_types_storage: []*wl_interface;

zxdg_exporter_v2_requests: [2]wl_message;

zxdg_importer_v2_requests: [2]wl_message;

zxdg_exported_v2_requests: [1]wl_message;
zxdg_exported_v2_events  : [1]wl_message;

zxdg_imported_v2_requests: [2]wl_message;
zxdg_imported_v2_events  : [1]wl_message;

#assert size_of(zxdg_exporter_v2) == 0 "wayland-scanner bug: zxdg_exporter_v2 is non-empty";
#assert size_of(zxdg_importer_v2) == 0 "wayland-scanner bug: zxdg_importer_v2 is non-empty";
#assert size_of(zxdg_exported_v2) == 0 "wayland-scanner bug: zxdg_exported_v2 is non-empty";
#assert size_of(zxdg_imported_v2) == 0 "wayland-scanner bug: zxdg_imported_v2 is non-empty";
