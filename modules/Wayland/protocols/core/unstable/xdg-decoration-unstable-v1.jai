/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: xdg_decoration_unstable_v1
 */

zxdg_decoration_manager_v1_interface: wl_interface;
zxdg_decoration_manager_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_decoration_manager_v1_interface;

    set_user_data :: inline (self: *zxdg_decoration_manager_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_decoration_manager_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_decoration_manager_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_decoration_manager_v1) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_DECORATION_MANAGER_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    get_toplevel_decoration :: inline (self: *zxdg_decoration_manager_v1, toplevel: *xdg_toplevel) -> *zxdg_toplevel_decoration_v1 #c_call {
        ret: *wl_proxy = wl_proxy.marshal_flags(
            self, ZXDG_DECORATION_MANAGER_V1_GET_TOPLEVEL_DECORATION,
            *zxdg_toplevel_decoration_v1_interface, wl_proxy.get_version(self), 0,
            null, toplevel);
        return cast(*zxdg_toplevel_decoration_v1) ret;
    }
}

ZXDG_DECORATION_MANAGER_V1_DESTROY                       : u32 : 0;
ZXDG_DECORATION_MANAGER_V1_GET_TOPLEVEL_DECORATION       : u32 : 1;
ZXDG_DECORATION_MANAGER_V1_DESTROY_SINCE                 : u32 : 1;
ZXDG_DECORATION_MANAGER_V1_GET_TOPLEVEL_DECORATION_SINCE : u32 : 1;

zxdg_toplevel_decoration_v1_interface: wl_interface;
zxdg_toplevel_decoration_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *zxdg_toplevel_decoration_v1_interface;

    /* ENUM: zxdg_toplevel_decoration_v1::error */
    error_unconfigured_buffer : u32 : 0;
    error_already_constructed : u32 : 1;
    error_orphaned            : u32 : 2;

    /* ENUM: zxdg_toplevel_decoration_v1::mode */
    mode_client_side : u32 : 1;
    mode_server_side : u32 : 2;

    set_user_data :: inline (self: *zxdg_toplevel_decoration_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *zxdg_toplevel_decoration_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *zxdg_toplevel_decoration_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *zxdg_toplevel_decoration_v1) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_TOPLEVEL_DECORATION_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    set_mode :: inline (self: *zxdg_toplevel_decoration_v1, mode: u32) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_TOPLEVEL_DECORATION_V1_SET_MODE,
            null, wl_proxy.get_version(self), 0,
            mode);
    }

    unset_mode :: inline (self: *zxdg_toplevel_decoration_v1) #c_call {
        wl_proxy.marshal_flags(
            self, ZXDG_TOPLEVEL_DECORATION_V1_UNSET_MODE,
            null, wl_proxy.get_version(self), 0);
    }

    add_listener :: inline (self: *zxdg_toplevel_decoration_v1, listener: *zxdg_toplevel_decoration_v1_listener, data: *void) -> s32 #c_call {
        return wl_proxy.add_listener(self, cast(*generic_c_call) listener, data);
    }
}

ZXDG_TOPLEVEL_DECORATION_V1_DESTROY          : u32 : 0;
ZXDG_TOPLEVEL_DECORATION_V1_SET_MODE         : u32 : 1;
ZXDG_TOPLEVEL_DECORATION_V1_UNSET_MODE       : u32 : 2;
ZXDG_TOPLEVEL_DECORATION_V1_DESTROY_SINCE    : u32 : 1;
ZXDG_TOPLEVEL_DECORATION_V1_SET_MODE_SINCE   : u32 : 1;
ZXDG_TOPLEVEL_DECORATION_V1_UNSET_MODE_SINCE : u32 : 1;
ZXDG_TOPLEVEL_DECORATION_V1_CONFIGURE_SINCE  : u32 : 1;

zxdg_toplevel_decoration_v1_listener :: struct {
    configure := _stubs_.configure;

    _stubs_ :: struct {
        configure :: (data: *void,
            self: *zxdg_toplevel_decoration_v1,
            mode: u32) -> void #c_call {}
    }
}


#scope_module
xdg_decoration_unstable_v1_protocol_init :: () {
    xdg_decoration_unstable_v1_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: zxdg_decoration_manager_v1::get_toplevel_decoration */
        *zxdg_toplevel_decoration_v1_interface,   // 1
        *xdg_toplevel_interface,   // 2
        /* REQUEST: zxdg_toplevel_decoration_v1::set_mode */
        null,  // 3
        /* EVENT: zxdg_toplevel_decoration_v1::configure */
        null,  // 4
    ];

    zxdg_decoration_manager_v1_requests[0] = .{"destroy", "", xdg_decoration_unstable_v1_types_storage.data + 0};
    zxdg_decoration_manager_v1_requests[1] = .{"get_toplevel_decoration", "no", xdg_decoration_unstable_v1_types_storage.data + 1};
    zxdg_decoration_manager_v1_interface = .{
        "zxdg_decoration_manager_v1", 1,
        zxdg_decoration_manager_v1_requests.count, zxdg_decoration_manager_v1_requests.data,
        0, null,
    };

    zxdg_toplevel_decoration_v1_requests[0] = .{"destroy", "", xdg_decoration_unstable_v1_types_storage.data + 0};
    zxdg_toplevel_decoration_v1_requests[1] = .{"set_mode", "u", xdg_decoration_unstable_v1_types_storage.data + 3};
    zxdg_toplevel_decoration_v1_requests[2] = .{"unset_mode", "", xdg_decoration_unstable_v1_types_storage.data + 0};
    zxdg_toplevel_decoration_v1_events[0] = .{"configure", "u", xdg_decoration_unstable_v1_types_storage.data + 4};
    zxdg_toplevel_decoration_v1_interface = .{
        "zxdg_toplevel_decoration_v1", 1,
        zxdg_toplevel_decoration_v1_requests.count, zxdg_toplevel_decoration_v1_requests.data,
        zxdg_toplevel_decoration_v1_events.count, zxdg_toplevel_decoration_v1_events.data,
    };
}


#scope_file
xdg_decoration_unstable_v1_types_storage: []*wl_interface;

zxdg_decoration_manager_v1_requests: [2]wl_message;

zxdg_toplevel_decoration_v1_requests: [3]wl_message;
zxdg_toplevel_decoration_v1_events  : [1]wl_message;

#assert size_of(zxdg_decoration_manager_v1) == 0 "wayland-scanner bug: zxdg_decoration_manager_v1 is non-empty";
#assert size_of(zxdg_toplevel_decoration_v1) == 0 "wayland-scanner bug: zxdg_toplevel_decoration_v1 is non-empty";
