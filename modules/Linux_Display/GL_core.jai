// Stripped-down version of `glad_core.jai` from the standard `GL` module

GL_Procs :: struct #type_info_procedures_are_void_pointers #type_info_no_size_complaint {
    GLenum :: u32;
    GLboolean :: bool;  // s8?
    GLbitfield :: u32;
    GLbyte :: s8;
    GLshort :: s16;
    GLint :: s32;
    GLclampx :: s32;
    GLubyte :: u8;
    GLushort :: u16;
    GLuint :: u32;
    GLsizei :: u32;
    GLfloat :: float32;
    GLclampf :: float32;
    GLdouble :: float64;
    GLclampd :: float64;
    GLchar :: u8;
    GLcharARB :: u8;
    GLhandleARB :: u32;
    GLhalfARB :: u16;
    GLhalf :: u16;
    GLfixed :: s32;
    GLintptr :: s64;
    GLsizeiptr :: s64;
    GLint64 :: s64;
    GLuint64 :: u64;
    GLintptrARB :: s64;
    GLsizeiptrARB :: u64; // s64?
    GLint64EXT :: s64;
    GLuint64EXT :: u64;
    GLsync :: u64;
    GLhalfNV :: u16;

    GLDEBUGPROC    :: #type (GLenum, GLenum, GLuint, GLenum, GLsizei, *GLchar, *void) #c_call;
    GLDEBUGPROCKHR :: GLDEBUGPROC;
    GLDEBUGPROCARB :: GLDEBUGPROC;
    GLDEBUGPROCAMD :: #type (GLuint, GLenum, GLenum, GLsizei, *GLchar, *void) #c_call;

    // Version flags:

    gl_version_major : s32;
    gl_version_minor : s32;
    GL_VERSION_1_0 : bool;
    GL_VERSION_1_1 : bool;
    GL_VERSION_1_2 : bool;
    GL_VERSION_1_3 : bool;
    GL_VERSION_1_4 : bool;
    GL_VERSION_1_5 : bool;
    GL_VERSION_2_0 : bool;
    GL_VERSION_2_1 : bool;
    GL_VERSION_3_0 : bool;
    GL_VERSION_3_1 : bool;
    GL_VERSION_3_2 : bool;
    GL_VERSION_3_3 : bool;
    GL_VERSION_4_0 : bool;
    GL_VERSION_4_1 : bool;
    GL_VERSION_4_2 : bool;
    GL_VERSION_4_3 : bool;
    GL_VERSION_4_4 : bool;
    GL_VERSION_4_5 : bool;
    GL_VERSION_4_6 : bool;

    // Types:

    // Core enums:

    // GL_VERSION_1_0
    GL_DEPTH_BUFFER_BIT :: 0x00000100;
    GL_STENCIL_BUFFER_BIT :: 0x00000400;
    GL_COLOR_BUFFER_BIT :: 0x00004000;
    GL_FALSE :: false;
    GL_TRUE :: true;
    GL_POINTS :: 0x0000;
    GL_LINES :: 0x0001;
    GL_LINE_LOOP :: 0x0002;
    GL_LINE_STRIP :: 0x0003;
    GL_TRIANGLES :: 0x0004;
    GL_TRIANGLE_STRIP :: 0x0005;
    GL_TRIANGLE_FAN :: 0x0006;
    GL_NEVER :: 0x0200;
    GL_LESS :: 0x0201;
    GL_EQUAL :: 0x0202;
    GL_LEQUAL :: 0x0203;
    GL_GREATER :: 0x0204;
    GL_NOTEQUAL :: 0x0205;
    GL_GEQUAL :: 0x0206;
    GL_ALWAYS :: 0x0207;
    GL_ZERO :: 0;
    GL_ONE :: 1;
    GL_SRC_COLOR :: 0x0300;
    GL_ONE_MINUS_SRC_COLOR :: 0x0301;
    GL_SRC_ALPHA :: 0x0302;
    GL_ONE_MINUS_SRC_ALPHA :: 0x0303;
    GL_DST_ALPHA :: 0x0304;
    GL_ONE_MINUS_DST_ALPHA :: 0x0305;
    GL_DST_COLOR :: 0x0306;
    GL_ONE_MINUS_DST_COLOR :: 0x0307;
    GL_SRC_ALPHA_SATURATE :: 0x0308;
    GL_NONE :: 0;
    GL_FRONT_LEFT :: 0x0400;
    GL_FRONT_RIGHT :: 0x0401;
    GL_BACK_LEFT :: 0x0402;
    GL_BACK_RIGHT :: 0x0403;
    GL_FRONT :: 0x0404;
    GL_BACK :: 0x0405;
    GL_LEFT :: 0x0406;
    GL_RIGHT :: 0x0407;
    GL_FRONT_AND_BACK :: 0x0408;
    GL_NO_ERROR :: 0;
    GL_INVALID_ENUM :: 0x0500;
    GL_INVALID_VALUE :: 0x0501;
    GL_INVALID_OPERATION :: 0x0502;
    GL_OUT_OF_MEMORY :: 0x0505;
    GL_CW :: 0x0900;
    GL_CCW :: 0x0901;
    GL_POINT_SIZE :: 0x0B11;
    GL_POINT_SIZE_RANGE :: 0x0B12;
    GL_POINT_SIZE_GRANULARITY :: 0x0B13;
    GL_LINE_SMOOTH :: 0x0B20;
    GL_LINE_WIDTH :: 0x0B21;
    GL_LINE_WIDTH_RANGE :: 0x0B22;
    GL_LINE_WIDTH_GRANULARITY :: 0x0B23;
    GL_POLYGON_MODE :: 0x0B40;
    GL_POLYGON_SMOOTH :: 0x0B41;
    GL_CULL_FACE :: 0x0B44;
    GL_CULL_FACE_MODE :: 0x0B45;
    GL_FRONT_FACE :: 0x0B46;
    GL_DEPTH_RANGE :: 0x0B70;
    GL_DEPTH_TEST :: 0x0B71;
    GL_DEPTH_WRITEMASK :: 0x0B72;
    GL_DEPTH_CLEAR_VALUE :: 0x0B73;
    GL_DEPTH_FUNC :: 0x0B74;
    GL_STENCIL_TEST :: 0x0B90;
    GL_STENCIL_CLEAR_VALUE :: 0x0B91;
    GL_STENCIL_FUNC :: 0x0B92;
    GL_STENCIL_VALUE_MASK :: 0x0B93;
    GL_STENCIL_FAIL :: 0x0B94;
    GL_STENCIL_PASS_DEPTH_FAIL :: 0x0B95;
    GL_STENCIL_PASS_DEPTH_PASS :: 0x0B96;
    GL_STENCIL_REF :: 0x0B97;
    GL_STENCIL_WRITEMASK :: 0x0B98;
    GL_VIEWPORT :: 0x0BA2;
    GL_DITHER :: 0x0BD0;
    GL_BLEND_DST :: 0x0BE0;
    GL_BLEND_SRC :: 0x0BE1;
    GL_BLEND :: 0x0BE2;
    GL_LOGIC_OP_MODE :: 0x0BF0;
    GL_DRAW_BUFFER :: 0x0C01;
    GL_READ_BUFFER :: 0x0C02;
    GL_SCISSOR_BOX :: 0x0C10;
    GL_SCISSOR_TEST :: 0x0C11;
    GL_COLOR_CLEAR_VALUE :: 0x0C22;
    GL_COLOR_WRITEMASK :: 0x0C23;
    GL_DOUBLEBUFFER :: 0x0C32;
    GL_STEREO :: 0x0C33;
    GL_LINE_SMOOTH_HINT :: 0x0C52;
    GL_POLYGON_SMOOTH_HINT :: 0x0C53;
    GL_UNPACK_SWAP_BYTES :: 0x0CF0;
    GL_UNPACK_LSB_FIRST :: 0x0CF1;
    GL_UNPACK_ROW_LENGTH :: 0x0CF2;
    GL_UNPACK_SKIP_ROWS :: 0x0CF3;
    GL_UNPACK_SKIP_PIXELS :: 0x0CF4;
    GL_UNPACK_ALIGNMENT :: 0x0CF5;
    GL_PACK_SWAP_BYTES :: 0x0D00;
    GL_PACK_LSB_FIRST :: 0x0D01;
    GL_PACK_ROW_LENGTH :: 0x0D02;
    GL_PACK_SKIP_ROWS :: 0x0D03;
    GL_PACK_SKIP_PIXELS :: 0x0D04;
    GL_PACK_ALIGNMENT :: 0x0D05;
    GL_MAX_TEXTURE_SIZE :: 0x0D33;
    GL_MAX_VIEWPORT_DIMS :: 0x0D3A;
    GL_SUBPIXEL_BITS :: 0x0D50;
    GL_TEXTURE_1D :: 0x0DE0;
    GL_TEXTURE_2D :: 0x0DE1;
    GL_TEXTURE_WIDTH :: 0x1000;
    GL_TEXTURE_HEIGHT :: 0x1001;
    GL_TEXTURE_BORDER_COLOR :: 0x1004;
    GL_DONT_CARE :: 0x1100;
    GL_FASTEST :: 0x1101;
    GL_NICEST :: 0x1102;
    GL_BYTE :: 0x1400;
    GL_UNSIGNED_BYTE :: 0x1401;
    GL_SHORT :: 0x1402;
    GL_UNSIGNED_SHORT :: 0x1403;
    GL_INT :: 0x1404;
    GL_UNSIGNED_INT :: 0x1405;
    GL_FLOAT :: 0x1406;
    GL_CLEAR :: 0x1500;
    GL_AND :: 0x1501;
    GL_AND_REVERSE :: 0x1502;
    GL_COPY :: 0x1503;
    GL_AND_INVERTED :: 0x1504;
    GL_NOOP :: 0x1505;
    GL_XOR :: 0x1506;
    GL_OR :: 0x1507;
    GL_NOR :: 0x1508;
    GL_EQUIV :: 0x1509;
    GL_INVERT :: 0x150A;
    GL_OR_REVERSE :: 0x150B;
    GL_COPY_INVERTED :: 0x150C;
    GL_OR_INVERTED :: 0x150D;
    GL_NAND :: 0x150E;
    GL_SET :: 0x150F;
    GL_TEXTURE :: 0x1702;
    GL_COLOR :: 0x1800;
    GL_DEPTH :: 0x1801;
    GL_STENCIL :: 0x1802;
    GL_STENCIL_INDEX :: 0x1901;
    GL_DEPTH_COMPONENT :: 0x1902;
    GL_RED :: 0x1903;
    GL_GREEN :: 0x1904;
    GL_BLUE :: 0x1905;
    GL_ALPHA :: 0x1906;
    GL_RGB :: 0x1907;
    GL_RGBA :: 0x1908;
    GL_POINT :: 0x1B00;
    GL_LINE :: 0x1B01;
    GL_FILL :: 0x1B02;
    GL_KEEP :: 0x1E00;
    GL_REPLACE :: 0x1E01;
    GL_INCR :: 0x1E02;
    GL_DECR :: 0x1E03;
    GL_VENDOR :: 0x1F00;
    GL_RENDERER :: 0x1F01;
    GL_VERSION :: 0x1F02;
    GL_EXTENSIONS :: 0x1F03;
    GL_NEAREST :: 0x2600;
    GL_LINEAR :: 0x2601;
    GL_NEAREST_MIPMAP_NEAREST :: 0x2700;
    GL_LINEAR_MIPMAP_NEAREST :: 0x2701;
    GL_NEAREST_MIPMAP_LINEAR :: 0x2702;
    GL_LINEAR_MIPMAP_LINEAR :: 0x2703;
    GL_TEXTURE_MAG_FILTER :: 0x2800;
    GL_TEXTURE_MIN_FILTER :: 0x2801;
    GL_TEXTURE_WRAP_S :: 0x2802;
    GL_TEXTURE_WRAP_T :: 0x2803;
    GL_REPEAT :: 0x2901;

    // GL_VERSION_1_1
    GL_COLOR_LOGIC_OP :: 0x0BF2;
    GL_POLYGON_OFFSET_UNITS :: 0x2A00;
    GL_POLYGON_OFFSET_POINT :: 0x2A01;
    GL_POLYGON_OFFSET_LINE :: 0x2A02;
    GL_POLYGON_OFFSET_FILL :: 0x8037;
    GL_POLYGON_OFFSET_FACTOR :: 0x8038;
    GL_TEXTURE_BINDING_1D :: 0x8068;
    GL_TEXTURE_BINDING_2D :: 0x8069;
    GL_TEXTURE_INTERNAL_FORMAT :: 0x1003;
    GL_TEXTURE_RED_SIZE :: 0x805C;
    GL_TEXTURE_GREEN_SIZE :: 0x805D;
    GL_TEXTURE_BLUE_SIZE :: 0x805E;
    GL_TEXTURE_ALPHA_SIZE :: 0x805F;
    GL_DOUBLE :: 0x140A;
    GL_PROXY_TEXTURE_1D :: 0x8063;
    GL_PROXY_TEXTURE_2D :: 0x8064;
    GL_R3_G3_B2 :: 0x2A10;
    GL_RGB4 :: 0x804F;
    GL_RGB5 :: 0x8050;
    GL_RGB8 :: 0x8051;
    GL_RGB10 :: 0x8052;
    GL_RGB12 :: 0x8053;
    GL_RGB16 :: 0x8054;
    GL_RGBA2 :: 0x8055;
    GL_RGBA4 :: 0x8056;
    GL_RGB5_A1 :: 0x8057;
    GL_RGBA8 :: 0x8058;
    GL_RGB10_A2 :: 0x8059;
    GL_RGBA12 :: 0x805A;
    GL_RGBA16 :: 0x805B;

    // GL_VERSION_1_2
    GL_UNSIGNED_BYTE_3_3_2 :: 0x8032;
    GL_UNSIGNED_SHORT_4_4_4_4 :: 0x8033;
    GL_UNSIGNED_SHORT_5_5_5_1 :: 0x8034;
    GL_UNSIGNED_INT_8_8_8_8 :: 0x8035;
    GL_UNSIGNED_INT_10_10_10_2 :: 0x8036;
    GL_TEXTURE_BINDING_3D :: 0x806A;
    GL_PACK_SKIP_IMAGES :: 0x806B;
    GL_PACK_IMAGE_HEIGHT :: 0x806C;
    GL_UNPACK_SKIP_IMAGES :: 0x806D;
    GL_UNPACK_IMAGE_HEIGHT :: 0x806E;
    GL_TEXTURE_3D :: 0x806F;
    GL_PROXY_TEXTURE_3D :: 0x8070;
    GL_TEXTURE_DEPTH :: 0x8071;
    GL_TEXTURE_WRAP_R :: 0x8072;
    GL_MAX_3D_TEXTURE_SIZE :: 0x8073;
    GL_UNSIGNED_BYTE_2_3_3_REV :: 0x8362;
    GL_UNSIGNED_SHORT_5_6_5 :: 0x8363;
    GL_UNSIGNED_SHORT_5_6_5_REV :: 0x8364;
    GL_UNSIGNED_SHORT_4_4_4_4_REV :: 0x8365;
    GL_UNSIGNED_SHORT_1_5_5_5_REV :: 0x8366;
    GL_UNSIGNED_INT_8_8_8_8_REV :: 0x8367;
    GL_UNSIGNED_INT_2_10_10_10_REV :: 0x8368;
    GL_BGR :: 0x80E0;
    GL_BGRA :: 0x80E1;
    GL_MAX_ELEMENTS_VERTICES :: 0x80E8;
    GL_MAX_ELEMENTS_INDICES :: 0x80E9;
    GL_CLAMP_TO_EDGE :: 0x812F;
    GL_TEXTURE_MIN_LOD :: 0x813A;
    GL_TEXTURE_MAX_LOD :: 0x813B;
    GL_TEXTURE_BASE_LEVEL :: 0x813C;
    GL_TEXTURE_MAX_LEVEL :: 0x813D;
    GL_SMOOTH_POINT_SIZE_RANGE :: 0x0B12;
    GL_SMOOTH_POINT_SIZE_GRANULARITY :: 0x0B13;
    GL_SMOOTH_LINE_WIDTH_RANGE :: 0x0B22;
    GL_SMOOTH_LINE_WIDTH_GRANULARITY :: 0x0B23;
    GL_ALIASED_LINE_WIDTH_RANGE :: 0x846E;

    // GL_VERSION_1_3
    GL_TEXTURE0 :: 0x84C0;
    GL_TEXTURE1 :: 0x84C1;
    GL_TEXTURE2 :: 0x84C2;
    GL_TEXTURE3 :: 0x84C3;
    GL_TEXTURE4 :: 0x84C4;
    GL_TEXTURE5 :: 0x84C5;
    GL_TEXTURE6 :: 0x84C6;
    GL_TEXTURE7 :: 0x84C7;
    GL_TEXTURE8 :: 0x84C8;
    GL_TEXTURE9 :: 0x84C9;
    GL_TEXTURE10 :: 0x84CA;
    GL_TEXTURE11 :: 0x84CB;
    GL_TEXTURE12 :: 0x84CC;
    GL_TEXTURE13 :: 0x84CD;
    GL_TEXTURE14 :: 0x84CE;
    GL_TEXTURE15 :: 0x84CF;
    GL_TEXTURE16 :: 0x84D0;
    GL_TEXTURE17 :: 0x84D1;
    GL_TEXTURE18 :: 0x84D2;
    GL_TEXTURE19 :: 0x84D3;
    GL_TEXTURE20 :: 0x84D4;
    GL_TEXTURE21 :: 0x84D5;
    GL_TEXTURE22 :: 0x84D6;
    GL_TEXTURE23 :: 0x84D7;
    GL_TEXTURE24 :: 0x84D8;
    GL_TEXTURE25 :: 0x84D9;
    GL_TEXTURE26 :: 0x84DA;
    GL_TEXTURE27 :: 0x84DB;
    GL_TEXTURE28 :: 0x84DC;
    GL_TEXTURE29 :: 0x84DD;
    GL_TEXTURE30 :: 0x84DE;
    GL_TEXTURE31 :: 0x84DF;
    GL_ACTIVE_TEXTURE :: 0x84E0;
    GL_MULTISAMPLE :: 0x809D;
    GL_SAMPLE_ALPHA_TO_COVERAGE :: 0x809E;
    GL_SAMPLE_ALPHA_TO_ONE :: 0x809F;
    GL_SAMPLE_COVERAGE :: 0x80A0;
    GL_SAMPLE_BUFFERS :: 0x80A8;
    GL_SAMPLES :: 0x80A9;
    GL_SAMPLE_COVERAGE_VALUE :: 0x80AA;
    GL_SAMPLE_COVERAGE_INVERT :: 0x80AB;
    GL_TEXTURE_CUBE_MAP :: 0x8513;
    GL_TEXTURE_BINDING_CUBE_MAP :: 0x8514;
    GL_TEXTURE_CUBE_MAP_POSITIVE_X :: 0x8515;
    GL_TEXTURE_CUBE_MAP_NEGATIVE_X :: 0x8516;
    GL_TEXTURE_CUBE_MAP_POSITIVE_Y :: 0x8517;
    GL_TEXTURE_CUBE_MAP_NEGATIVE_Y :: 0x8518;
    GL_TEXTURE_CUBE_MAP_POSITIVE_Z :: 0x8519;
    GL_TEXTURE_CUBE_MAP_NEGATIVE_Z :: 0x851A;
    GL_PROXY_TEXTURE_CUBE_MAP :: 0x851B;
    GL_MAX_CUBE_MAP_TEXTURE_SIZE :: 0x851C;
    GL_COMPRESSED_RGB :: 0x84ED;
    GL_COMPRESSED_RGBA :: 0x84EE;
    GL_TEXTURE_COMPRESSION_HINT :: 0x84EF;
    GL_TEXTURE_COMPRESSED_IMAGE_SIZE :: 0x86A0;
    GL_TEXTURE_COMPRESSED :: 0x86A1;
    GL_NUM_COMPRESSED_TEXTURE_FORMATS :: 0x86A2;
    GL_COMPRESSED_TEXTURE_FORMATS :: 0x86A3;
    GL_CLAMP_TO_BORDER :: 0x812D;

    // GL_VERSION_1_4
    GL_BLEND_DST_RGB :: 0x80C8;
    GL_BLEND_SRC_RGB :: 0x80C9;
    GL_BLEND_DST_ALPHA :: 0x80CA;
    GL_BLEND_SRC_ALPHA :: 0x80CB;
    GL_POINT_FADE_THRESHOLD_SIZE :: 0x8128;
    GL_DEPTH_COMPONENT16 :: 0x81A5;
    GL_DEPTH_COMPONENT24 :: 0x81A6;
    GL_DEPTH_COMPONENT32 :: 0x81A7;
    GL_MIRRORED_REPEAT :: 0x8370;
    GL_MAX_TEXTURE_LOD_BIAS :: 0x84FD;
    GL_TEXTURE_LOD_BIAS :: 0x8501;
    GL_INCR_WRAP :: 0x8507;
    GL_DECR_WRAP :: 0x8508;
    GL_TEXTURE_DEPTH_SIZE :: 0x884A;
    GL_TEXTURE_COMPARE_MODE :: 0x884C;
    GL_TEXTURE_COMPARE_FUNC :: 0x884D;
    GL_BLEND_COLOR :: 0x8005;
    GL_BLEND_EQUATION :: 0x8009;
    GL_CONSTANT_COLOR :: 0x8001;
    GL_ONE_MINUS_CONSTANT_COLOR :: 0x8002;
    GL_CONSTANT_ALPHA :: 0x8003;
    GL_ONE_MINUS_CONSTANT_ALPHA :: 0x8004;
    GL_FUNC_ADD :: 0x8006;
    GL_FUNC_REVERSE_SUBTRACT :: 0x800B;
    GL_FUNC_SUBTRACT :: 0x800A;
    GL_MIN :: 0x8007;
    GL_MAX :: 0x8008;

    // GL_VERSION_1_5
    GL_BUFFER_SIZE :: 0x8764;
    GL_BUFFER_USAGE :: 0x8765;
    GL_QUERY_COUNTER_BITS :: 0x8864;
    GL_CURRENT_QUERY :: 0x8865;
    GL_QUERY_RESULT :: 0x8866;
    GL_QUERY_RESULT_AVAILABLE :: 0x8867;
    GL_ARRAY_BUFFER :: 0x8892;
    GL_ELEMENT_ARRAY_BUFFER :: 0x8893;
    GL_ARRAY_BUFFER_BINDING :: 0x8894;
    GL_ELEMENT_ARRAY_BUFFER_BINDING :: 0x8895;
    GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING :: 0x889F;
    GL_READ_ONLY :: 0x88B8;
    GL_WRITE_ONLY :: 0x88B9;
    GL_READ_WRITE :: 0x88BA;
    GL_BUFFER_ACCESS :: 0x88BB;
    GL_BUFFER_MAPPED :: 0x88BC;
    GL_BUFFER_MAP_POINTER :: 0x88BD;
    GL_STREAM_DRAW :: 0x88E0;
    GL_STREAM_READ :: 0x88E1;
    GL_STREAM_COPY :: 0x88E2;
    GL_STATIC_DRAW :: 0x88E4;
    GL_STATIC_READ :: 0x88E5;
    GL_STATIC_COPY :: 0x88E6;
    GL_DYNAMIC_DRAW :: 0x88E8;
    GL_DYNAMIC_READ :: 0x88E9;
    GL_DYNAMIC_COPY :: 0x88EA;
    GL_SAMPLES_PASSED :: 0x8914;
    GL_SRC1_ALPHA :: 0x8589;

    // GL_VERSION_2_0
    GL_BLEND_EQUATION_RGB :: 0x8009;
    GL_VERTEX_ATTRIB_ARRAY_ENABLED :: 0x8622;
    GL_VERTEX_ATTRIB_ARRAY_SIZE :: 0x8623;
    GL_VERTEX_ATTRIB_ARRAY_STRIDE :: 0x8624;
    GL_VERTEX_ATTRIB_ARRAY_TYPE :: 0x8625;
    GL_CURRENT_VERTEX_ATTRIB :: 0x8626;
    GL_VERTEX_PROGRAM_POINT_SIZE :: 0x8642;
    GL_VERTEX_ATTRIB_ARRAY_POINTER :: 0x8645;
    GL_STENCIL_BACK_FUNC :: 0x8800;
    GL_STENCIL_BACK_FAIL :: 0x8801;
    GL_STENCIL_BACK_PASS_DEPTH_FAIL :: 0x8802;
    GL_STENCIL_BACK_PASS_DEPTH_PASS :: 0x8803;
    GL_MAX_DRAW_BUFFERS :: 0x8824;
    GL_DRAW_BUFFER0 :: 0x8825;
    GL_DRAW_BUFFER1 :: 0x8826;
    GL_DRAW_BUFFER2 :: 0x8827;
    GL_DRAW_BUFFER3 :: 0x8828;
    GL_DRAW_BUFFER4 :: 0x8829;
    GL_DRAW_BUFFER5 :: 0x882A;
    GL_DRAW_BUFFER6 :: 0x882B;
    GL_DRAW_BUFFER7 :: 0x882C;
    GL_DRAW_BUFFER8 :: 0x882D;
    GL_DRAW_BUFFER9 :: 0x882E;
    GL_DRAW_BUFFER10 :: 0x882F;
    GL_DRAW_BUFFER11 :: 0x8830;
    GL_DRAW_BUFFER12 :: 0x8831;
    GL_DRAW_BUFFER13 :: 0x8832;
    GL_DRAW_BUFFER14 :: 0x8833;
    GL_DRAW_BUFFER15 :: 0x8834;
    GL_BLEND_EQUATION_ALPHA :: 0x883D;
    GL_MAX_VERTEX_ATTRIBS :: 0x8869;
    GL_VERTEX_ATTRIB_ARRAY_NORMALIZED :: 0x886A;
    GL_MAX_TEXTURE_IMAGE_UNITS :: 0x8872;
    GL_FRAGMENT_SHADER :: 0x8B30;
    GL_VERTEX_SHADER :: 0x8B31;
    GL_MAX_FRAGMENT_UNIFORM_COMPONENTS :: 0x8B49;
    GL_MAX_VERTEX_UNIFORM_COMPONENTS :: 0x8B4A;
    GL_MAX_VARYING_FLOATS :: 0x8B4B;
    GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS :: 0x8B4C;
    GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS :: 0x8B4D;
    GL_SHADER_TYPE :: 0x8B4F;
    GL_FLOAT_VEC2 :: 0x8B50;
    GL_FLOAT_VEC3 :: 0x8B51;
    GL_FLOAT_VEC4 :: 0x8B52;
    GL_INT_VEC2 :: 0x8B53;
    GL_INT_VEC3 :: 0x8B54;
    GL_INT_VEC4 :: 0x8B55;
    GL_BOOL :: 0x8B56;
    GL_BOOL_VEC2 :: 0x8B57;
    GL_BOOL_VEC3 :: 0x8B58;
    GL_BOOL_VEC4 :: 0x8B59;
    GL_FLOAT_MAT2 :: 0x8B5A;
    GL_FLOAT_MAT3 :: 0x8B5B;
    GL_FLOAT_MAT4 :: 0x8B5C;
    GL_SAMPLER_1D :: 0x8B5D;
    GL_SAMPLER_2D :: 0x8B5E;
    GL_SAMPLER_3D :: 0x8B5F;
    GL_SAMPLER_CUBE :: 0x8B60;
    GL_SAMPLER_1D_SHADOW :: 0x8B61;
    GL_SAMPLER_2D_SHADOW :: 0x8B62;
    GL_DELETE_STATUS :: 0x8B80;
    GL_COMPILE_STATUS :: 0x8B81;
    GL_LINK_STATUS :: 0x8B82;
    GL_VALIDATE_STATUS :: 0x8B83;
    GL_INFO_LOG_LENGTH :: 0x8B84;
    GL_ATTACHED_SHADERS :: 0x8B85;
    GL_ACTIVE_UNIFORMS :: 0x8B86;
    GL_ACTIVE_UNIFORM_MAX_LENGTH :: 0x8B87;
    GL_SHADER_SOURCE_LENGTH :: 0x8B88;
    GL_ACTIVE_ATTRIBUTES :: 0x8B89;
    GL_ACTIVE_ATTRIBUTE_MAX_LENGTH :: 0x8B8A;
    GL_FRAGMENT_SHADER_DERIVATIVE_HINT :: 0x8B8B;
    GL_SHADING_LANGUAGE_VERSION :: 0x8B8C;
    GL_CURRENT_PROGRAM :: 0x8B8D;
    GL_POINT_SPRITE_COORD_ORIGIN :: 0x8CA0;
    GL_LOWER_LEFT :: 0x8CA1;
    GL_UPPER_LEFT :: 0x8CA2;
    GL_STENCIL_BACK_REF :: 0x8CA3;
    GL_STENCIL_BACK_VALUE_MASK :: 0x8CA4;
    GL_STENCIL_BACK_WRITEMASK :: 0x8CA5;

    // GL_VERSION_2_1
    GL_PIXEL_PACK_BUFFER :: 0x88EB;
    GL_PIXEL_UNPACK_BUFFER :: 0x88EC;
    GL_PIXEL_PACK_BUFFER_BINDING :: 0x88ED;
    GL_PIXEL_UNPACK_BUFFER_BINDING :: 0x88EF;
    GL_FLOAT_MAT2x3 :: 0x8B65;
    GL_FLOAT_MAT2x4 :: 0x8B66;
    GL_FLOAT_MAT3x2 :: 0x8B67;
    GL_FLOAT_MAT3x4 :: 0x8B68;
    GL_FLOAT_MAT4x2 :: 0x8B69;
    GL_FLOAT_MAT4x3 :: 0x8B6A;
    GL_SRGB :: 0x8C40;
    GL_SRGB8 :: 0x8C41;
    GL_SRGB_ALPHA :: 0x8C42;
    GL_SRGB8_ALPHA8 :: 0x8C43;
    GL_COMPRESSED_SRGB :: 0x8C48;
    GL_COMPRESSED_SRGB_ALPHA :: 0x8C49;

    // GL_VERSION_3_0
    GL_COMPARE_REF_TO_TEXTURE :: 0x884E;
    GL_CLIP_DISTANCE0 :: 0x3000;
    GL_CLIP_DISTANCE1 :: 0x3001;
    GL_CLIP_DISTANCE2 :: 0x3002;
    GL_CLIP_DISTANCE3 :: 0x3003;
    GL_CLIP_DISTANCE4 :: 0x3004;
    GL_CLIP_DISTANCE5 :: 0x3005;
    GL_CLIP_DISTANCE6 :: 0x3006;
    GL_CLIP_DISTANCE7 :: 0x3007;
    GL_MAX_CLIP_DISTANCES :: 0x0D32;
    GL_MAJOR_VERSION :: 0x821B;
    GL_MINOR_VERSION :: 0x821C;
    GL_NUM_EXTENSIONS :: 0x821D;
    GL_CONTEXT_FLAGS :: 0x821E;
    GL_COMPRESSED_RED :: 0x8225;
    GL_COMPRESSED_RG :: 0x8226;
    GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT :: 0x00000001;
    GL_RGBA32F :: 0x8814;
    GL_RGB32F :: 0x8815;
    GL_RGBA16F :: 0x881A;
    GL_RGB16F :: 0x881B;
    GL_VERTEX_ATTRIB_ARRAY_INTEGER :: 0x88FD;
    GL_MAX_ARRAY_TEXTURE_LAYERS :: 0x88FF;
    GL_MIN_PROGRAM_TEXEL_OFFSET :: 0x8904;
    GL_MAX_PROGRAM_TEXEL_OFFSET :: 0x8905;
    GL_CLAMP_READ_COLOR :: 0x891C;
    GL_FIXED_ONLY :: 0x891D;
    GL_MAX_VARYING_COMPONENTS :: 0x8B4B;
    GL_TEXTURE_1D_ARRAY :: 0x8C18;
    GL_PROXY_TEXTURE_1D_ARRAY :: 0x8C19;
    GL_TEXTURE_2D_ARRAY :: 0x8C1A;
    GL_PROXY_TEXTURE_2D_ARRAY :: 0x8C1B;
    GL_TEXTURE_BINDING_1D_ARRAY :: 0x8C1C;
    GL_TEXTURE_BINDING_2D_ARRAY :: 0x8C1D;
    GL_R11F_G11F_B10F :: 0x8C3A;
    GL_UNSIGNED_INT_10F_11F_11F_REV :: 0x8C3B;
    GL_RGB9_E5 :: 0x8C3D;
    GL_UNSIGNED_INT_5_9_9_9_REV :: 0x8C3E;
    GL_TEXTURE_SHARED_SIZE :: 0x8C3F;
    GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH :: 0x8C76;
    GL_TRANSFORM_FEEDBACK_BUFFER_MODE :: 0x8C7F;
    GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS :: 0x8C80;
    GL_TRANSFORM_FEEDBACK_VARYINGS :: 0x8C83;
    GL_TRANSFORM_FEEDBACK_BUFFER_START :: 0x8C84;
    GL_TRANSFORM_FEEDBACK_BUFFER_SIZE :: 0x8C85;
    GL_PRIMITIVES_GENERATED :: 0x8C87;
    GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN :: 0x8C88;
    GL_RASTERIZER_DISCARD :: 0x8C89;
    GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS :: 0x8C8A;
    GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS :: 0x8C8B;
    GL_INTERLEAVED_ATTRIBS :: 0x8C8C;
    GL_SEPARATE_ATTRIBS :: 0x8C8D;
    GL_TRANSFORM_FEEDBACK_BUFFER :: 0x8C8E;
    GL_TRANSFORM_FEEDBACK_BUFFER_BINDING :: 0x8C8F;
    GL_RGBA32UI :: 0x8D70;
    GL_RGB32UI :: 0x8D71;
    GL_RGBA16UI :: 0x8D76;
    GL_RGB16UI :: 0x8D77;
    GL_RGBA8UI :: 0x8D7C;
    GL_RGB8UI :: 0x8D7D;
    GL_RGBA32I :: 0x8D82;
    GL_RGB32I :: 0x8D83;
    GL_RGBA16I :: 0x8D88;
    GL_RGB16I :: 0x8D89;
    GL_RGBA8I :: 0x8D8E;
    GL_RGB8I :: 0x8D8F;
    GL_RED_INTEGER :: 0x8D94;
    GL_GREEN_INTEGER :: 0x8D95;
    GL_BLUE_INTEGER :: 0x8D96;
    GL_RGB_INTEGER :: 0x8D98;
    GL_RGBA_INTEGER :: 0x8D99;
    GL_BGR_INTEGER :: 0x8D9A;
    GL_BGRA_INTEGER :: 0x8D9B;
    GL_SAMPLER_1D_ARRAY :: 0x8DC0;
    GL_SAMPLER_2D_ARRAY :: 0x8DC1;
    GL_SAMPLER_1D_ARRAY_SHADOW :: 0x8DC3;
    GL_SAMPLER_2D_ARRAY_SHADOW :: 0x8DC4;
    GL_SAMPLER_CUBE_SHADOW :: 0x8DC5;
    GL_UNSIGNED_INT_VEC2 :: 0x8DC6;
    GL_UNSIGNED_INT_VEC3 :: 0x8DC7;
    GL_UNSIGNED_INT_VEC4 :: 0x8DC8;
    GL_INT_SAMPLER_1D :: 0x8DC9;
    GL_INT_SAMPLER_2D :: 0x8DCA;
    GL_INT_SAMPLER_3D :: 0x8DCB;
    GL_INT_SAMPLER_CUBE :: 0x8DCC;
    GL_INT_SAMPLER_1D_ARRAY :: 0x8DCE;
    GL_INT_SAMPLER_2D_ARRAY :: 0x8DCF;
    GL_UNSIGNED_INT_SAMPLER_1D :: 0x8DD1;
    GL_UNSIGNED_INT_SAMPLER_2D :: 0x8DD2;
    GL_UNSIGNED_INT_SAMPLER_3D :: 0x8DD3;
    GL_UNSIGNED_INT_SAMPLER_CUBE :: 0x8DD4;
    GL_UNSIGNED_INT_SAMPLER_1D_ARRAY :: 0x8DD6;
    GL_UNSIGNED_INT_SAMPLER_2D_ARRAY :: 0x8DD7;
    GL_QUERY_WAIT :: 0x8E13;
    GL_QUERY_NO_WAIT :: 0x8E14;
    GL_QUERY_BY_REGION_WAIT :: 0x8E15;
    GL_QUERY_BY_REGION_NO_WAIT :: 0x8E16;
    GL_BUFFER_ACCESS_FLAGS :: 0x911F;
    GL_BUFFER_MAP_LENGTH :: 0x9120;
    GL_BUFFER_MAP_OFFSET :: 0x9121;
    GL_DEPTH_COMPONENT32F :: 0x8CAC;
    GL_DEPTH32F_STENCIL8 :: 0x8CAD;
    GL_FLOAT_32_UNSIGNED_INT_24_8_REV :: 0x8DAD;
    GL_INVALID_FRAMEBUFFER_OPERATION :: 0x0506;
    GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING :: 0x8210;
    GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE :: 0x8211;
    GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE :: 0x8212;
    GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE :: 0x8213;
    GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE :: 0x8214;
    GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE :: 0x8215;
    GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE :: 0x8216;
    GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE :: 0x8217;
    GL_FRAMEBUFFER_DEFAULT :: 0x8218;
    GL_FRAMEBUFFER_UNDEFINED :: 0x8219;
    GL_DEPTH_STENCIL_ATTACHMENT :: 0x821A;
    GL_MAX_RENDERBUFFER_SIZE :: 0x84E8;
    GL_DEPTH_STENCIL :: 0x84F9;
    GL_UNSIGNED_INT_24_8 :: 0x84FA;
    GL_DEPTH24_STENCIL8 :: 0x88F0;
    GL_TEXTURE_STENCIL_SIZE :: 0x88F1;
    GL_TEXTURE_RED_TYPE :: 0x8C10;
    GL_TEXTURE_GREEN_TYPE :: 0x8C11;
    GL_TEXTURE_BLUE_TYPE :: 0x8C12;
    GL_TEXTURE_ALPHA_TYPE :: 0x8C13;
    GL_TEXTURE_DEPTH_TYPE :: 0x8C16;
    GL_UNSIGNED_NORMALIZED :: 0x8C17;
    GL_FRAMEBUFFER_BINDING :: 0x8CA6;
    GL_DRAW_FRAMEBUFFER_BINDING :: 0x8CA6;
    GL_RENDERBUFFER_BINDING :: 0x8CA7;
    GL_READ_FRAMEBUFFER :: 0x8CA8;
    GL_DRAW_FRAMEBUFFER :: 0x8CA9;
    GL_READ_FRAMEBUFFER_BINDING :: 0x8CAA;
    GL_RENDERBUFFER_SAMPLES :: 0x8CAB;
    GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE :: 0x8CD0;
    GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME :: 0x8CD1;
    GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL :: 0x8CD2;
    GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE :: 0x8CD3;
    GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER :: 0x8CD4;
    GL_FRAMEBUFFER_COMPLETE :: 0x8CD5;
    GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT :: 0x8CD6;
    GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT :: 0x8CD7;
    GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER :: 0x8CDB;
    GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER :: 0x8CDC;
    GL_FRAMEBUFFER_UNSUPPORTED :: 0x8CDD;
    GL_MAX_COLOR_ATTACHMENTS :: 0x8CDF;
    GL_COLOR_ATTACHMENT0 :: 0x8CE0;
    GL_COLOR_ATTACHMENT1 :: 0x8CE1;
    GL_COLOR_ATTACHMENT2 :: 0x8CE2;
    GL_COLOR_ATTACHMENT3 :: 0x8CE3;
    GL_COLOR_ATTACHMENT4 :: 0x8CE4;
    GL_COLOR_ATTACHMENT5 :: 0x8CE5;
    GL_COLOR_ATTACHMENT6 :: 0x8CE6;
    GL_COLOR_ATTACHMENT7 :: 0x8CE7;
    GL_COLOR_ATTACHMENT8 :: 0x8CE8;
    GL_COLOR_ATTACHMENT9 :: 0x8CE9;
    GL_COLOR_ATTACHMENT10 :: 0x8CEA;
    GL_COLOR_ATTACHMENT11 :: 0x8CEB;
    GL_COLOR_ATTACHMENT12 :: 0x8CEC;
    GL_COLOR_ATTACHMENT13 :: 0x8CED;
    GL_COLOR_ATTACHMENT14 :: 0x8CEE;
    GL_COLOR_ATTACHMENT15 :: 0x8CEF;
    GL_COLOR_ATTACHMENT16 :: 0x8CF0;
    GL_COLOR_ATTACHMENT17 :: 0x8CF1;
    GL_COLOR_ATTACHMENT18 :: 0x8CF2;
    GL_COLOR_ATTACHMENT19 :: 0x8CF3;
    GL_COLOR_ATTACHMENT20 :: 0x8CF4;
    GL_COLOR_ATTACHMENT21 :: 0x8CF5;
    GL_COLOR_ATTACHMENT22 :: 0x8CF6;
    GL_COLOR_ATTACHMENT23 :: 0x8CF7;
    GL_COLOR_ATTACHMENT24 :: 0x8CF8;
    GL_COLOR_ATTACHMENT25 :: 0x8CF9;
    GL_COLOR_ATTACHMENT26 :: 0x8CFA;
    GL_COLOR_ATTACHMENT27 :: 0x8CFB;
    GL_COLOR_ATTACHMENT28 :: 0x8CFC;
    GL_COLOR_ATTACHMENT29 :: 0x8CFD;
    GL_COLOR_ATTACHMENT30 :: 0x8CFE;
    GL_COLOR_ATTACHMENT31 :: 0x8CFF;
    GL_DEPTH_ATTACHMENT :: 0x8D00;
    GL_STENCIL_ATTACHMENT :: 0x8D20;
    GL_FRAMEBUFFER :: 0x8D40;
    GL_RENDERBUFFER :: 0x8D41;
    GL_RENDERBUFFER_WIDTH :: 0x8D42;
    GL_RENDERBUFFER_HEIGHT :: 0x8D43;
    GL_RENDERBUFFER_INTERNAL_FORMAT :: 0x8D44;
    GL_STENCIL_INDEX1 :: 0x8D46;
    GL_STENCIL_INDEX4 :: 0x8D47;
    GL_STENCIL_INDEX8 :: 0x8D48;
    GL_STENCIL_INDEX16 :: 0x8D49;
    GL_RENDERBUFFER_RED_SIZE :: 0x8D50;
    GL_RENDERBUFFER_GREEN_SIZE :: 0x8D51;
    GL_RENDERBUFFER_BLUE_SIZE :: 0x8D52;
    GL_RENDERBUFFER_ALPHA_SIZE :: 0x8D53;
    GL_RENDERBUFFER_DEPTH_SIZE :: 0x8D54;
    GL_RENDERBUFFER_STENCIL_SIZE :: 0x8D55;
    GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE :: 0x8D56;
    GL_MAX_SAMPLES :: 0x8D57;
    GL_INDEX :: 0x8222;
    GL_FRAMEBUFFER_SRGB :: 0x8DB9;
    GL_HALF_FLOAT :: 0x140B;
    GL_MAP_READ_BIT :: 0x0001;
    GL_MAP_WRITE_BIT :: 0x0002;
    GL_MAP_INVALIDATE_RANGE_BIT :: 0x0004;
    GL_MAP_INVALIDATE_BUFFER_BIT :: 0x0008;
    GL_MAP_FLUSH_EXPLICIT_BIT :: 0x0010;
    GL_MAP_UNSYNCHRONIZED_BIT :: 0x0020;
    GL_COMPRESSED_RED_RGTC1 :: 0x8DBB;
    GL_COMPRESSED_SIGNED_RED_RGTC1 :: 0x8DBC;
    GL_COMPRESSED_RG_RGTC2 :: 0x8DBD;
    GL_COMPRESSED_SIGNED_RG_RGTC2 :: 0x8DBE;
    GL_RG :: 0x8227;
    GL_RG_INTEGER :: 0x8228;
    GL_R8 :: 0x8229;
    GL_R16 :: 0x822A;
    GL_RG8 :: 0x822B;
    GL_RG16 :: 0x822C;
    GL_R16F :: 0x822D;
    GL_R32F :: 0x822E;
    GL_RG16F :: 0x822F;
    GL_RG32F :: 0x8230;
    GL_R8I :: 0x8231;
    GL_R8UI :: 0x8232;
    GL_R16I :: 0x8233;
    GL_R16UI :: 0x8234;
    GL_R32I :: 0x8235;
    GL_R32UI :: 0x8236;
    GL_RG8I :: 0x8237;
    GL_RG8UI :: 0x8238;
    GL_RG16I :: 0x8239;
    GL_RG16UI :: 0x823A;
    GL_RG32I :: 0x823B;
    GL_RG32UI :: 0x823C;
    GL_VERTEX_ARRAY_BINDING :: 0x85B5;

    // GL_VERSION_3_1
    GL_SAMPLER_2D_RECT :: 0x8B63;
    GL_SAMPLER_2D_RECT_SHADOW :: 0x8B64;
    GL_SAMPLER_BUFFER :: 0x8DC2;
    GL_INT_SAMPLER_2D_RECT :: 0x8DCD;
    GL_INT_SAMPLER_BUFFER :: 0x8DD0;
    GL_UNSIGNED_INT_SAMPLER_2D_RECT :: 0x8DD5;
    GL_UNSIGNED_INT_SAMPLER_BUFFER :: 0x8DD8;
    GL_TEXTURE_BUFFER :: 0x8C2A;
    GL_MAX_TEXTURE_BUFFER_SIZE :: 0x8C2B;
    GL_TEXTURE_BINDING_BUFFER :: 0x8C2C;
    GL_TEXTURE_BUFFER_DATA_STORE_BINDING :: 0x8C2D;
    GL_TEXTURE_RECTANGLE :: 0x84F5;
    GL_TEXTURE_BINDING_RECTANGLE :: 0x84F6;
    GL_PROXY_TEXTURE_RECTANGLE :: 0x84F7;
    GL_MAX_RECTANGLE_TEXTURE_SIZE :: 0x84F8;
    GL_R8_SNORM :: 0x8F94;
    GL_RG8_SNORM :: 0x8F95;
    GL_RGB8_SNORM :: 0x8F96;
    GL_RGBA8_SNORM :: 0x8F97;
    GL_R16_SNORM :: 0x8F98;
    GL_RG16_SNORM :: 0x8F99;
    GL_RGB16_SNORM :: 0x8F9A;
    GL_RGBA16_SNORM :: 0x8F9B;
    GL_SIGNED_NORMALIZED :: 0x8F9C;
    GL_PRIMITIVE_RESTART :: 0x8F9D;
    GL_PRIMITIVE_RESTART_INDEX :: 0x8F9E;
    GL_COPY_READ_BUFFER :: 0x8F36;
    GL_COPY_WRITE_BUFFER :: 0x8F37;
    GL_UNIFORM_BUFFER :: 0x8A11;
    GL_UNIFORM_BUFFER_BINDING :: 0x8A28;
    GL_UNIFORM_BUFFER_START :: 0x8A29;
    GL_UNIFORM_BUFFER_SIZE :: 0x8A2A;
    GL_MAX_VERTEX_UNIFORM_BLOCKS :: 0x8A2B;
    GL_MAX_GEOMETRY_UNIFORM_BLOCKS :: 0x8A2C;
    GL_MAX_FRAGMENT_UNIFORM_BLOCKS :: 0x8A2D;
    GL_MAX_COMBINED_UNIFORM_BLOCKS :: 0x8A2E;
    GL_MAX_UNIFORM_BUFFER_BINDINGS :: 0x8A2F;
    GL_MAX_UNIFORM_BLOCK_SIZE :: 0x8A30;
    GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS :: 0x8A31;
    GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS :: 0x8A32;
    GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS :: 0x8A33;
    GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT :: 0x8A34;
    GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH :: 0x8A35;
    GL_ACTIVE_UNIFORM_BLOCKS :: 0x8A36;
    GL_UNIFORM_TYPE :: 0x8A37;
    GL_UNIFORM_SIZE :: 0x8A38;
    GL_UNIFORM_NAME_LENGTH :: 0x8A39;
    GL_UNIFORM_BLOCK_INDEX :: 0x8A3A;
    GL_UNIFORM_OFFSET :: 0x8A3B;
    GL_UNIFORM_ARRAY_STRIDE :: 0x8A3C;
    GL_UNIFORM_MATRIX_STRIDE :: 0x8A3D;
    GL_UNIFORM_IS_ROW_MAJOR :: 0x8A3E;
    GL_UNIFORM_BLOCK_BINDING :: 0x8A3F;
    GL_UNIFORM_BLOCK_DATA_SIZE :: 0x8A40;
    GL_UNIFORM_BLOCK_NAME_LENGTH :: 0x8A41;
    GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS :: 0x8A42;
    GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES :: 0x8A43;
    GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER :: 0x8A44;
    GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER :: 0x8A45;
    GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER :: 0x8A46;
    GL_INVALID_INDEX :: 0xFFFFFFFF;

    // GL_VERSION_3_2
    GL_CONTEXT_CORE_PROFILE_BIT :: 0x00000001;
    GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :: 0x00000002;
    GL_LINES_ADJACENCY :: 0x000A;
    GL_LINE_STRIP_ADJACENCY :: 0x000B;
    GL_TRIANGLES_ADJACENCY :: 0x000C;
    GL_TRIANGLE_STRIP_ADJACENCY :: 0x000D;
    GL_PROGRAM_POINT_SIZE :: 0x8642;
    GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS :: 0x8C29;
    GL_FRAMEBUFFER_ATTACHMENT_LAYERED :: 0x8DA7;
    GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS :: 0x8DA8;
    GL_GEOMETRY_SHADER :: 0x8DD9;
    GL_GEOMETRY_VERTICES_OUT :: 0x8916;
    GL_GEOMETRY_INPUT_TYPE :: 0x8917;
    GL_GEOMETRY_OUTPUT_TYPE :: 0x8918;
    GL_MAX_GEOMETRY_UNIFORM_COMPONENTS :: 0x8DDF;
    GL_MAX_GEOMETRY_OUTPUT_VERTICES :: 0x8DE0;
    GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS :: 0x8DE1;
    GL_MAX_VERTEX_OUTPUT_COMPONENTS :: 0x9122;
    GL_MAX_GEOMETRY_INPUT_COMPONENTS :: 0x9123;
    GL_MAX_GEOMETRY_OUTPUT_COMPONENTS :: 0x9124;
    GL_MAX_FRAGMENT_INPUT_COMPONENTS :: 0x9125;
    GL_CONTEXT_PROFILE_MASK :: 0x9126;
    GL_DEPTH_CLAMP :: 0x864F;
    GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION :: 0x8E4C;
    GL_FIRST_VERTEX_CONVENTION :: 0x8E4D;
    GL_LAST_VERTEX_CONVENTION :: 0x8E4E;
    GL_PROVOKING_VERTEX :: 0x8E4F;
    GL_TEXTURE_CUBE_MAP_SEAMLESS :: 0x884F;
    GL_MAX_SERVER_WAIT_TIMEOUT :: 0x9111;
    GL_OBJECT_TYPE :: 0x9112;
    GL_SYNC_CONDITION :: 0x9113;
    GL_SYNC_STATUS :: 0x9114;
    GL_SYNC_FLAGS :: 0x9115;
    GL_SYNC_FENCE :: 0x9116;
    GL_SYNC_GPU_COMMANDS_COMPLETE :: 0x9117;
    GL_UNSIGNALED :: 0x9118;
    GL_SIGNALED :: 0x9119;
    GL_ALREADY_SIGNALED :: 0x911A;
    GL_TIMEOUT_EXPIRED :: 0x911B;
    GL_CONDITION_SATISFIED :: 0x911C;
    GL_WAIT_FAILED :: 0x911D;
    GL_TIMEOUT_IGNORED :: 0xFFFFFFFFFFFFFFFF;
    GL_SYNC_FLUSH_COMMANDS_BIT :: 0x00000001;
    GL_SAMPLE_POSITION :: 0x8E50;
    GL_SAMPLE_MASK :: 0x8E51;
    GL_SAMPLE_MASK_VALUE :: 0x8E52;
    GL_MAX_SAMPLE_MASK_WORDS :: 0x8E59;
    GL_TEXTURE_2D_MULTISAMPLE :: 0x9100;
    GL_PROXY_TEXTURE_2D_MULTISAMPLE :: 0x9101;
    GL_TEXTURE_2D_MULTISAMPLE_ARRAY :: 0x9102;
    GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY :: 0x9103;
    GL_TEXTURE_BINDING_2D_MULTISAMPLE :: 0x9104;
    GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY :: 0x9105;
    GL_TEXTURE_SAMPLES :: 0x9106;
    GL_TEXTURE_FIXED_SAMPLE_LOCATIONS :: 0x9107;
    GL_SAMPLER_2D_MULTISAMPLE :: 0x9108;
    GL_INT_SAMPLER_2D_MULTISAMPLE :: 0x9109;
    GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE :: 0x910A;
    GL_SAMPLER_2D_MULTISAMPLE_ARRAY :: 0x910B;
    GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: 0x910C;
    GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: 0x910D;
    GL_MAX_COLOR_TEXTURE_SAMPLES :: 0x910E;
    GL_MAX_DEPTH_TEXTURE_SAMPLES :: 0x910F;
    GL_MAX_INTEGER_SAMPLES :: 0x9110;

    // GL_VERSION_3_3
    GL_VERTEX_ATTRIB_ARRAY_DIVISOR :: 0x88FE;
    GL_SRC1_COLOR :: 0x88F9;
    GL_ONE_MINUS_SRC1_COLOR :: 0x88FA;
    GL_ONE_MINUS_SRC1_ALPHA :: 0x88FB;
    GL_MAX_DUAL_SOURCE_DRAW_BUFFERS :: 0x88FC;
    GL_ANY_SAMPLES_PASSED :: 0x8C2F;
    GL_SAMPLER_BINDING :: 0x8919;
    GL_RGB10_A2UI :: 0x906F;
    GL_TEXTURE_SWIZZLE_R :: 0x8E42;
    GL_TEXTURE_SWIZZLE_G :: 0x8E43;
    GL_TEXTURE_SWIZZLE_B :: 0x8E44;
    GL_TEXTURE_SWIZZLE_A :: 0x8E45;
    GL_TEXTURE_SWIZZLE_RGBA :: 0x8E46;
    GL_TIME_ELAPSED :: 0x88BF;
    GL_TIMESTAMP :: 0x8E28;
    GL_INT_2_10_10_10_REV :: 0x8D9F;

    // GL_VERSION_4_0
    GL_SAMPLE_SHADING :: 0x8C36;
    GL_MIN_SAMPLE_SHADING_VALUE :: 0x8C37;
    GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET :: 0x8E5E;
    GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET :: 0x8E5F;
    GL_TEXTURE_CUBE_MAP_ARRAY :: 0x9009;
    GL_TEXTURE_BINDING_CUBE_MAP_ARRAY :: 0x900A;
    GL_PROXY_TEXTURE_CUBE_MAP_ARRAY :: 0x900B;
    GL_SAMPLER_CUBE_MAP_ARRAY :: 0x900C;
    GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW :: 0x900D;
    GL_INT_SAMPLER_CUBE_MAP_ARRAY :: 0x900E;
    GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY :: 0x900F;
    GL_DRAW_INDIRECT_BUFFER :: 0x8F3F;
    GL_DRAW_INDIRECT_BUFFER_BINDING :: 0x8F43;
    GL_GEOMETRY_SHADER_INVOCATIONS :: 0x887F;
    GL_MAX_GEOMETRY_SHADER_INVOCATIONS :: 0x8E5A;
    GL_MIN_FRAGMENT_INTERPOLATION_OFFSET :: 0x8E5B;
    GL_MAX_FRAGMENT_INTERPOLATION_OFFSET :: 0x8E5C;
    GL_FRAGMENT_INTERPOLATION_OFFSET_BITS :: 0x8E5D;
    GL_MAX_VERTEX_STREAMS :: 0x8E71;
    GL_DOUBLE_VEC2 :: 0x8FFC;
    GL_DOUBLE_VEC3 :: 0x8FFD;
    GL_DOUBLE_VEC4 :: 0x8FFE;
    GL_DOUBLE_MAT2 :: 0x8F46;
    GL_DOUBLE_MAT3 :: 0x8F47;
    GL_DOUBLE_MAT4 :: 0x8F48;
    GL_DOUBLE_MAT2x3 :: 0x8F49;
    GL_DOUBLE_MAT2x4 :: 0x8F4A;
    GL_DOUBLE_MAT3x2 :: 0x8F4B;
    GL_DOUBLE_MAT3x4 :: 0x8F4C;
    GL_DOUBLE_MAT4x2 :: 0x8F4D;
    GL_DOUBLE_MAT4x3 :: 0x8F4E;
    GL_ACTIVE_SUBROUTINES :: 0x8DE5;
    GL_ACTIVE_SUBROUTINE_UNIFORMS :: 0x8DE6;
    GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS :: 0x8E47;
    GL_ACTIVE_SUBROUTINE_MAX_LENGTH :: 0x8E48;
    GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH :: 0x8E49;
    GL_MAX_SUBROUTINES :: 0x8DE7;
    GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS :: 0x8DE8;
    GL_NUM_COMPATIBLE_SUBROUTINES :: 0x8E4A;
    GL_COMPATIBLE_SUBROUTINES :: 0x8E4B;
    GL_PATCHES :: 0x000E;
    GL_PATCH_VERTICES :: 0x8E72;
    GL_PATCH_DEFAULT_INNER_LEVEL :: 0x8E73;
    GL_PATCH_DEFAULT_OUTER_LEVEL :: 0x8E74;
    GL_TESS_CONTROL_OUTPUT_VERTICES :: 0x8E75;
    GL_TESS_GEN_MODE :: 0x8E76;
    GL_TESS_GEN_SPACING :: 0x8E77;
    GL_TESS_GEN_VERTEX_ORDER :: 0x8E78;
    GL_TESS_GEN_POINT_MODE :: 0x8E79;
    GL_ISOLINES :: 0x8E7A;
    GL_FRACTIONAL_ODD :: 0x8E7B;
    GL_FRACTIONAL_EVEN :: 0x8E7C;
    GL_MAX_PATCH_VERTICES :: 0x8E7D;
    GL_MAX_TESS_GEN_LEVEL :: 0x8E7E;
    GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS :: 0x8E7F;
    GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS :: 0x8E80;
    GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS :: 0x8E81;
    GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS :: 0x8E82;
    GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS :: 0x8E83;
    GL_MAX_TESS_PATCH_COMPONENTS :: 0x8E84;
    GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS :: 0x8E85;
    GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS :: 0x8E86;
    GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS :: 0x8E89;
    GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS :: 0x8E8A;
    GL_MAX_TESS_CONTROL_INPUT_COMPONENTS :: 0x886C;
    GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS :: 0x886D;
    GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS :: 0x8E1E;
    GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS :: 0x8E1F;
    GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER :: 0x84F0;
    GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER :: 0x84F1;
    GL_TESS_EVALUATION_SHADER :: 0x8E87;
    GL_TESS_CONTROL_SHADER :: 0x8E88;
    GL_TRANSFORM_FEEDBACK :: 0x8E22;
    GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED :: 0x8E23;
    GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE :: 0x8E24;
    GL_TRANSFORM_FEEDBACK_BINDING :: 0x8E25;
    GL_MAX_TRANSFORM_FEEDBACK_BUFFERS :: 0x8E70;
    // GL_MAX_VERTEX_STREAMS :: 0x8E71;

    // GL_VERSION_4_1
    GL_FIXED :: 0x140C;
    GL_IMPLEMENTATION_COLOR_READ_TYPE :: 0x8B9A;
    GL_IMPLEMENTATION_COLOR_READ_FORMAT :: 0x8B9B;
    GL_LOW_FLOAT :: 0x8DF0;
    GL_MEDIUM_FLOAT :: 0x8DF1;
    GL_HIGH_FLOAT :: 0x8DF2;
    GL_LOW_INT :: 0x8DF3;
    GL_MEDIUM_INT :: 0x8DF4;
    GL_HIGH_INT :: 0x8DF5;
    GL_SHADER_COMPILER :: 0x8DFA;
    GL_SHADER_BINARY_FORMATS :: 0x8DF8;
    GL_NUM_SHADER_BINARY_FORMATS :: 0x8DF9;
    GL_MAX_VERTEX_UNIFORM_VECTORS :: 0x8DFB;
    GL_MAX_VARYING_VECTORS :: 0x8DFC;
    GL_MAX_FRAGMENT_UNIFORM_VECTORS :: 0x8DFD;
    GL_RGB565 :: 0x8D62;
    GL_PROGRAM_BINARY_RETRIEVABLE_HINT :: 0x8257;
    GL_PROGRAM_BINARY_LENGTH :: 0x8741;
    GL_NUM_PROGRAM_BINARY_FORMATS :: 0x87FE;
    GL_PROGRAM_BINARY_FORMATS :: 0x87FF;
    GL_VERTEX_SHADER_BIT :: 0x00000001;
    GL_FRAGMENT_SHADER_BIT :: 0x00000002;
    GL_GEOMETRY_SHADER_BIT :: 0x00000004;
    GL_TESS_CONTROL_SHADER_BIT :: 0x00000008;
    GL_TESS_EVALUATION_SHADER_BIT :: 0x00000010;
    GL_ALL_SHADER_BITS :: 0xFFFFFFFF;
    GL_PROGRAM_SEPARABLE :: 0x8258;
    GL_ACTIVE_PROGRAM :: 0x8259;
    GL_PROGRAM_PIPELINE_BINDING :: 0x825A;
    GL_MAX_VIEWPORTS :: 0x825B;
    GL_VIEWPORT_SUBPIXEL_BITS :: 0x825C;
    GL_VIEWPORT_BOUNDS_RANGE :: 0x825D;
    GL_LAYER_PROVOKING_VERTEX :: 0x825E;
    GL_VIEWPORT_INDEX_PROVOKING_VERTEX :: 0x825F;
    GL_UNDEFINED_VERTEX :: 0x8260;

    // GL_VERSION_4_2
    GL_COPY_READ_BUFFER_BINDING :: 0x8F36;
    GL_COPY_WRITE_BUFFER_BINDING :: 0x8F37;
    GL_TRANSFORM_FEEDBACK_ACTIVE :: 0x8E24;
    GL_TRANSFORM_FEEDBACK_PAUSED :: 0x8E23;
    GL_UNPACK_COMPRESSED_BLOCK_WIDTH :: 0x9127;
    GL_UNPACK_COMPRESSED_BLOCK_HEIGHT :: 0x9128;
    GL_UNPACK_COMPRESSED_BLOCK_DEPTH :: 0x9129;
    GL_UNPACK_COMPRESSED_BLOCK_SIZE :: 0x912A;
    GL_PACK_COMPRESSED_BLOCK_WIDTH :: 0x912B;
    GL_PACK_COMPRESSED_BLOCK_HEIGHT :: 0x912C;
    GL_PACK_COMPRESSED_BLOCK_DEPTH :: 0x912D;
    GL_PACK_COMPRESSED_BLOCK_SIZE :: 0x912E;
    GL_NUM_SAMPLE_COUNTS :: 0x9380;
    GL_MIN_MAP_BUFFER_ALIGNMENT :: 0x90BC;
    GL_ATOMIC_COUNTER_BUFFER :: 0x92C0;
    GL_ATOMIC_COUNTER_BUFFER_BINDING :: 0x92C1;
    GL_ATOMIC_COUNTER_BUFFER_START :: 0x92C2;
    GL_ATOMIC_COUNTER_BUFFER_SIZE :: 0x92C3;
    GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE :: 0x92C4;
    GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS :: 0x92C5;
    GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES :: 0x92C6;
    GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER :: 0x92C7;
    GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER :: 0x92C8;
    GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER :: 0x92C9;
    GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER :: 0x92CA;
    GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER :: 0x92CB;
    GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS :: 0x92CC;
    GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS :: 0x92CD;
    GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS :: 0x92CE;
    GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS :: 0x92CF;
    GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS :: 0x92D0;
    GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS :: 0x92D1;
    GL_MAX_VERTEX_ATOMIC_COUNTERS :: 0x92D2;
    GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS :: 0x92D3;
    GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS :: 0x92D4;
    GL_MAX_GEOMETRY_ATOMIC_COUNTERS :: 0x92D5;
    GL_MAX_FRAGMENT_ATOMIC_COUNTERS :: 0x92D6;
    GL_MAX_COMBINED_ATOMIC_COUNTERS :: 0x92D7;
    GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE :: 0x92D8;
    GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS :: 0x92DC;
    GL_ACTIVE_ATOMIC_COUNTER_BUFFERS :: 0x92D9;
    GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX :: 0x92DA;
    GL_UNSIGNED_INT_ATOMIC_COUNTER :: 0x92DB;
    GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT :: 0x00000001;
    GL_ELEMENT_ARRAY_BARRIER_BIT :: 0x00000002;
    GL_UNIFORM_BARRIER_BIT :: 0x00000004;
    GL_TEXTURE_FETCH_BARRIER_BIT :: 0x00000008;
    GL_SHADER_IMAGE_ACCESS_BARRIER_BIT :: 0x00000020;
    GL_COMMAND_BARRIER_BIT :: 0x00000040;
    GL_PIXEL_BUFFER_BARRIER_BIT :: 0x00000080;
    GL_TEXTURE_UPDATE_BARRIER_BIT :: 0x00000100;
    GL_BUFFER_UPDATE_BARRIER_BIT :: 0x00000200;
    GL_FRAMEBUFFER_BARRIER_BIT :: 0x00000400;
    GL_TRANSFORM_FEEDBACK_BARRIER_BIT :: 0x00000800;
    GL_ATOMIC_COUNTER_BARRIER_BIT :: 0x00001000;
    GL_ALL_BARRIER_BITS :: 0xFFFFFFFF;
    GL_MAX_IMAGE_UNITS :: 0x8F38;
    GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS :: 0x8F39;
    GL_IMAGE_BINDING_NAME :: 0x8F3A;
    GL_IMAGE_BINDING_LEVEL :: 0x8F3B;
    GL_IMAGE_BINDING_LAYERED :: 0x8F3C;
    GL_IMAGE_BINDING_LAYER :: 0x8F3D;
    GL_IMAGE_BINDING_ACCESS :: 0x8F3E;
    GL_IMAGE_1D :: 0x904C;
    GL_IMAGE_2D :: 0x904D;
    GL_IMAGE_3D :: 0x904E;
    GL_IMAGE_2D_RECT :: 0x904F;
    GL_IMAGE_CUBE :: 0x9050;
    GL_IMAGE_BUFFER :: 0x9051;
    GL_IMAGE_1D_ARRAY :: 0x9052;
    GL_IMAGE_2D_ARRAY :: 0x9053;
    GL_IMAGE_CUBE_MAP_ARRAY :: 0x9054;
    GL_IMAGE_2D_MULTISAMPLE :: 0x9055;
    GL_IMAGE_2D_MULTISAMPLE_ARRAY :: 0x9056;
    GL_INT_IMAGE_1D :: 0x9057;
    GL_INT_IMAGE_2D :: 0x9058;
    GL_INT_IMAGE_3D :: 0x9059;
    GL_INT_IMAGE_2D_RECT :: 0x905A;
    GL_INT_IMAGE_CUBE :: 0x905B;
    GL_INT_IMAGE_BUFFER :: 0x905C;
    GL_INT_IMAGE_1D_ARRAY :: 0x905D;
    GL_INT_IMAGE_2D_ARRAY :: 0x905E;
    GL_INT_IMAGE_CUBE_MAP_ARRAY :: 0x905F;
    GL_INT_IMAGE_2D_MULTISAMPLE :: 0x9060;
    GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY :: 0x9061;
    GL_UNSIGNED_INT_IMAGE_1D :: 0x9062;
    GL_UNSIGNED_INT_IMAGE_2D :: 0x9063;
    GL_UNSIGNED_INT_IMAGE_3D :: 0x9064;
    GL_UNSIGNED_INT_IMAGE_2D_RECT :: 0x9065;
    GL_UNSIGNED_INT_IMAGE_CUBE :: 0x9066;
    GL_UNSIGNED_INT_IMAGE_BUFFER :: 0x9067;
    GL_UNSIGNED_INT_IMAGE_1D_ARRAY :: 0x9068;
    GL_UNSIGNED_INT_IMAGE_2D_ARRAY :: 0x9069;
    GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY :: 0x906A;
    GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE :: 0x906B;
    GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY :: 0x906C;
    GL_MAX_IMAGE_SAMPLES :: 0x906D;
    GL_IMAGE_BINDING_FORMAT :: 0x906E;
    GL_IMAGE_FORMAT_COMPATIBILITY_TYPE :: 0x90C7;
    GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE :: 0x90C8;
    GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS :: 0x90C9;
    GL_MAX_VERTEX_IMAGE_UNIFORMS :: 0x90CA;
    GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS :: 0x90CB;
    GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS :: 0x90CC;
    GL_MAX_GEOMETRY_IMAGE_UNIFORMS :: 0x90CD;
    GL_MAX_FRAGMENT_IMAGE_UNIFORMS :: 0x90CE;
    GL_MAX_COMBINED_IMAGE_UNIFORMS :: 0x90CF;
    GL_COMPRESSED_RGBA_BPTC_UNORM :: 0x8E8C;
    GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM :: 0x8E8D;
    GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT :: 0x8E8E;
    GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT :: 0x8E8F;
    GL_TEXTURE_IMMUTABLE_FORMAT :: 0x912F;

    // GL_VERSION_4_3
    GL_NUM_SHADING_LANGUAGE_VERSIONS :: 0x82E9;
    GL_VERTEX_ATTRIB_ARRAY_LONG :: 0x874E;
    GL_COMPRESSED_RGB8_ETC2 :: 0x9274;
    GL_COMPRESSED_SRGB8_ETC2 :: 0x9275;
    GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: 0x9276;
    GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 :: 0x9277;
    GL_COMPRESSED_RGBA8_ETC2_EAC :: 0x9278;
    GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC :: 0x9279;
    GL_COMPRESSED_R11_EAC :: 0x9270;
    GL_COMPRESSED_SIGNED_R11_EAC :: 0x9271;
    GL_COMPRESSED_RG11_EAC :: 0x9272;
    GL_COMPRESSED_SIGNED_RG11_EAC :: 0x9273;
    GL_PRIMITIVE_RESTART_FIXED_INDEX :: 0x8D69;
    GL_ANY_SAMPLES_PASSED_CONSERVATIVE :: 0x8D6A;
    GL_MAX_ELEMENT_INDEX :: 0x8D6B;
    GL_COMPUTE_SHADER :: 0x91B9;
    GL_MAX_COMPUTE_UNIFORM_BLOCKS :: 0x91BB;
    GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS :: 0x91BC;
    GL_MAX_COMPUTE_IMAGE_UNIFORMS :: 0x91BD;
    GL_MAX_COMPUTE_SHARED_MEMORY_SIZE :: 0x8262;
    GL_MAX_COMPUTE_UNIFORM_COMPONENTS :: 0x8263;
    GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS :: 0x8264;
    GL_MAX_COMPUTE_ATOMIC_COUNTERS :: 0x8265;
    GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS :: 0x8266;
    GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS :: 0x90EB;
    GL_MAX_COMPUTE_WORK_GROUP_COUNT :: 0x91BE;
    GL_MAX_COMPUTE_WORK_GROUP_SIZE :: 0x91BF;
    GL_COMPUTE_WORK_GROUP_SIZE :: 0x8267;
    GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER :: 0x90EC;
    GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER :: 0x90ED;
    GL_DISPATCH_INDIRECT_BUFFER :: 0x90EE;
    GL_DISPATCH_INDIRECT_BUFFER_BINDING :: 0x90EF;
    GL_COMPUTE_SHADER_BIT :: 0x00000020;
    GL_DEBUG_OUTPUT_SYNCHRONOUS :: 0x8242;
    GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH :: 0x8243;
    GL_DEBUG_CALLBACK_FUNCTION :: 0x8244;
    GL_DEBUG_CALLBACK_USER_PARAM :: 0x8245;
    GL_DEBUG_SOURCE_API :: 0x8246;
    GL_DEBUG_SOURCE_WINDOW_SYSTEM :: 0x8247;
    GL_DEBUG_SOURCE_SHADER_COMPILER :: 0x8248;
    GL_DEBUG_SOURCE_THIRD_PARTY :: 0x8249;
    GL_DEBUG_SOURCE_APPLICATION :: 0x824A;
    GL_DEBUG_SOURCE_OTHER :: 0x824B;
    GL_DEBUG_TYPE_ERROR :: 0x824C;
    GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR :: 0x824D;
    GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR :: 0x824E;
    GL_DEBUG_TYPE_PORTABILITY :: 0x824F;
    GL_DEBUG_TYPE_PERFORMANCE :: 0x8250;
    GL_DEBUG_TYPE_OTHER :: 0x8251;
    GL_MAX_DEBUG_MESSAGE_LENGTH :: 0x9143;
    GL_MAX_DEBUG_LOGGED_MESSAGES :: 0x9144;
    GL_DEBUG_LOGGED_MESSAGES :: 0x9145;
    GL_DEBUG_SEVERITY_HIGH :: 0x9146;
    GL_DEBUG_SEVERITY_MEDIUM :: 0x9147;
    GL_DEBUG_SEVERITY_LOW :: 0x9148;
    GL_DEBUG_TYPE_MARKER :: 0x8268;
    GL_DEBUG_TYPE_PUSH_GROUP :: 0x8269;
    GL_DEBUG_TYPE_POP_GROUP :: 0x826A;
    GL_DEBUG_SEVERITY_NOTIFICATION :: 0x826B;
    GL_MAX_DEBUG_GROUP_STACK_DEPTH :: 0x826C;
    GL_DEBUG_GROUP_STACK_DEPTH :: 0x826D;
    GL_BUFFER :: 0x82E0;
    GL_SHADER :: 0x82E1;
    GL_PROGRAM :: 0x82E2;
    GL_QUERY :: 0x82E3;
    GL_PROGRAM_PIPELINE :: 0x82E4;
    GL_SAMPLER :: 0x82E6;
    GL_MAX_LABEL_LENGTH :: 0x82E8;
    GL_DEBUG_OUTPUT :: 0x92E0;
    GL_CONTEXT_FLAG_DEBUG_BIT :: 0x00000002;
    GL_MAX_UNIFORM_LOCATIONS :: 0x826E;
    GL_FRAMEBUFFER_DEFAULT_WIDTH :: 0x9310;
    GL_FRAMEBUFFER_DEFAULT_HEIGHT :: 0x9311;
    GL_FRAMEBUFFER_DEFAULT_LAYERS :: 0x9312;
    GL_FRAMEBUFFER_DEFAULT_SAMPLES :: 0x9313;
    GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS :: 0x9314;
    GL_MAX_FRAMEBUFFER_WIDTH :: 0x9315;
    GL_MAX_FRAMEBUFFER_HEIGHT :: 0x9316;
    GL_MAX_FRAMEBUFFER_LAYERS :: 0x9317;
    GL_MAX_FRAMEBUFFER_SAMPLES :: 0x9318;
    GL_INTERNALFORMAT_SUPPORTED :: 0x826F;
    GL_INTERNALFORMAT_PREFERRED :: 0x8270;
    GL_INTERNALFORMAT_RED_SIZE :: 0x8271;
    GL_INTERNALFORMAT_GREEN_SIZE :: 0x8272;
    GL_INTERNALFORMAT_BLUE_SIZE :: 0x8273;
    GL_INTERNALFORMAT_ALPHA_SIZE :: 0x8274;
    GL_INTERNALFORMAT_DEPTH_SIZE :: 0x8275;
    GL_INTERNALFORMAT_STENCIL_SIZE :: 0x8276;
    GL_INTERNALFORMAT_SHARED_SIZE :: 0x8277;
    GL_INTERNALFORMAT_RED_TYPE :: 0x8278;
    GL_INTERNALFORMAT_GREEN_TYPE :: 0x8279;
    GL_INTERNALFORMAT_BLUE_TYPE :: 0x827A;
    GL_INTERNALFORMAT_ALPHA_TYPE :: 0x827B;
    GL_INTERNALFORMAT_DEPTH_TYPE :: 0x827C;
    GL_INTERNALFORMAT_STENCIL_TYPE :: 0x827D;
    GL_MAX_WIDTH :: 0x827E;
    GL_MAX_HEIGHT :: 0x827F;
    GL_MAX_DEPTH :: 0x8280;
    GL_MAX_LAYERS :: 0x8281;
    GL_MAX_COMBINED_DIMENSIONS :: 0x8282;
    GL_COLOR_COMPONENTS :: 0x8283;
    GL_DEPTH_COMPONENTS :: 0x8284;
    GL_STENCIL_COMPONENTS :: 0x8285;
    GL_COLOR_RENDERABLE :: 0x8286;
    GL_DEPTH_RENDERABLE :: 0x8287;
    GL_STENCIL_RENDERABLE :: 0x8288;
    GL_FRAMEBUFFER_RENDERABLE :: 0x8289;
    GL_FRAMEBUFFER_RENDERABLE_LAYERED :: 0x828A;
    GL_FRAMEBUFFER_BLEND :: 0x828B;
    GL_READ_PIXELS :: 0x828C;
    GL_READ_PIXELS_FORMAT :: 0x828D;
    GL_READ_PIXELS_TYPE :: 0x828E;
    GL_TEXTURE_IMAGE_FORMAT :: 0x828F;
    GL_TEXTURE_IMAGE_TYPE :: 0x8290;
    GL_GET_TEXTURE_IMAGE_FORMAT :: 0x8291;
    GL_GET_TEXTURE_IMAGE_TYPE :: 0x8292;
    GL_MIPMAP :: 0x8293;
    GL_MANUAL_GENERATE_MIPMAP :: 0x8294;
    GL_AUTO_GENERATE_MIPMAP :: 0x8295;
    GL_COLOR_ENCODING :: 0x8296;
    GL_SRGB_READ :: 0x8297;
    GL_SRGB_WRITE :: 0x8298;
    GL_FILTER :: 0x829A;
    GL_VERTEX_TEXTURE :: 0x829B;
    GL_TESS_CONTROL_TEXTURE :: 0x829C;
    GL_TESS_EVALUATION_TEXTURE :: 0x829D;
    GL_GEOMETRY_TEXTURE :: 0x829E;
    GL_FRAGMENT_TEXTURE :: 0x829F;
    GL_COMPUTE_TEXTURE :: 0x82A0;
    GL_TEXTURE_SHADOW :: 0x82A1;
    GL_TEXTURE_GATHER :: 0x82A2;
    GL_TEXTURE_GATHER_SHADOW :: 0x82A3;
    GL_SHADER_IMAGE_LOAD :: 0x82A4;
    GL_SHADER_IMAGE_STORE :: 0x82A5;
    GL_SHADER_IMAGE_ATOMIC :: 0x82A6;
    GL_IMAGE_TEXEL_SIZE :: 0x82A7;
    GL_IMAGE_COMPATIBILITY_CLASS :: 0x82A8;
    GL_IMAGE_PIXEL_FORMAT :: 0x82A9;
    GL_IMAGE_PIXEL_TYPE :: 0x82AA;
    GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST :: 0x82AC;
    GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST :: 0x82AD;
    GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE :: 0x82AE;
    GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE :: 0x82AF;
    GL_TEXTURE_COMPRESSED_BLOCK_WIDTH :: 0x82B1;
    GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT :: 0x82B2;
    GL_TEXTURE_COMPRESSED_BLOCK_SIZE :: 0x82B3;
    GL_CLEAR_BUFFER :: 0x82B4;
    GL_TEXTURE_VIEW :: 0x82B5;
    GL_VIEW_COMPATIBILITY_CLASS :: 0x82B6;
    GL_FULL_SUPPORT :: 0x82B7;
    GL_CAVEAT_SUPPORT :: 0x82B8;
    GL_IMAGE_CLASS_4_X_32 :: 0x82B9;
    GL_IMAGE_CLASS_2_X_32 :: 0x82BA;
    GL_IMAGE_CLASS_1_X_32 :: 0x82BB;
    GL_IMAGE_CLASS_4_X_16 :: 0x82BC;
    GL_IMAGE_CLASS_2_X_16 :: 0x82BD;
    GL_IMAGE_CLASS_1_X_16 :: 0x82BE;
    GL_IMAGE_CLASS_4_X_8 :: 0x82BF;
    GL_IMAGE_CLASS_2_X_8 :: 0x82C0;
    GL_IMAGE_CLASS_1_X_8 :: 0x82C1;
    GL_IMAGE_CLASS_11_11_10 :: 0x82C2;
    GL_IMAGE_CLASS_10_10_10_2 :: 0x82C3;
    GL_VIEW_CLASS_128_BITS :: 0x82C4;
    GL_VIEW_CLASS_96_BITS :: 0x82C5;
    GL_VIEW_CLASS_64_BITS :: 0x82C6;
    GL_VIEW_CLASS_48_BITS :: 0x82C7;
    GL_VIEW_CLASS_32_BITS :: 0x82C8;
    GL_VIEW_CLASS_24_BITS :: 0x82C9;
    GL_VIEW_CLASS_16_BITS :: 0x82CA;
    GL_VIEW_CLASS_8_BITS :: 0x82CB;
    GL_VIEW_CLASS_S3TC_DXT1_RGB :: 0x82CC;
    GL_VIEW_CLASS_S3TC_DXT1_RGBA :: 0x82CD;
    GL_VIEW_CLASS_S3TC_DXT3_RGBA :: 0x82CE;
    GL_VIEW_CLASS_S3TC_DXT5_RGBA :: 0x82CF;
    GL_VIEW_CLASS_RGTC1_RED :: 0x82D0;
    GL_VIEW_CLASS_RGTC2_RG :: 0x82D1;
    GL_VIEW_CLASS_BPTC_UNORM :: 0x82D2;
    GL_VIEW_CLASS_BPTC_FLOAT :: 0x82D3;
    GL_UNIFORM :: 0x92E1;
    GL_UNIFORM_BLOCK :: 0x92E2;
    GL_PROGRAM_INPUT :: 0x92E3;
    GL_PROGRAM_OUTPUT :: 0x92E4;
    GL_BUFFER_VARIABLE :: 0x92E5;
    GL_SHADER_STORAGE_BLOCK :: 0x92E6;
    GL_VERTEX_SUBROUTINE :: 0x92E8;
    GL_TESS_CONTROL_SUBROUTINE :: 0x92E9;
    GL_TESS_EVALUATION_SUBROUTINE :: 0x92EA;
    GL_GEOMETRY_SUBROUTINE :: 0x92EB;
    GL_FRAGMENT_SUBROUTINE :: 0x92EC;
    GL_COMPUTE_SUBROUTINE :: 0x92ED;
    GL_VERTEX_SUBROUTINE_UNIFORM :: 0x92EE;
    GL_TESS_CONTROL_SUBROUTINE_UNIFORM :: 0x92EF;
    GL_TESS_EVALUATION_SUBROUTINE_UNIFORM :: 0x92F0;
    GL_GEOMETRY_SUBROUTINE_UNIFORM :: 0x92F1;
    GL_FRAGMENT_SUBROUTINE_UNIFORM :: 0x92F2;
    GL_COMPUTE_SUBROUTINE_UNIFORM :: 0x92F3;
    GL_TRANSFORM_FEEDBACK_VARYING :: 0x92F4;
    GL_ACTIVE_RESOURCES :: 0x92F5;
    GL_MAX_NAME_LENGTH :: 0x92F6;
    GL_MAX_NUM_ACTIVE_VARIABLES :: 0x92F7;
    GL_MAX_NUM_COMPATIBLE_SUBROUTINES :: 0x92F8;
    GL_NAME_LENGTH :: 0x92F9;
    GL_TYPE :: 0x92FA;
    GL_ARRAY_SIZE :: 0x92FB;
    GL_OFFSET :: 0x92FC;
    GL_BLOCK_INDEX :: 0x92FD;
    GL_ARRAY_STRIDE :: 0x92FE;
    GL_MATRIX_STRIDE :: 0x92FF;
    GL_IS_ROW_MAJOR :: 0x9300;
    GL_ATOMIC_COUNTER_BUFFER_INDEX :: 0x9301;
    GL_BUFFER_BINDING :: 0x9302;
    GL_BUFFER_DATA_SIZE :: 0x9303;
    GL_NUM_ACTIVE_VARIABLES :: 0x9304;
    GL_ACTIVE_VARIABLES :: 0x9305;
    GL_REFERENCED_BY_VERTEX_SHADER :: 0x9306;
    GL_REFERENCED_BY_TESS_CONTROL_SHADER :: 0x9307;
    GL_REFERENCED_BY_TESS_EVALUATION_SHADER :: 0x9308;
    GL_REFERENCED_BY_GEOMETRY_SHADER :: 0x9309;
    GL_REFERENCED_BY_FRAGMENT_SHADER :: 0x930A;
    GL_REFERENCED_BY_COMPUTE_SHADER :: 0x930B;
    GL_TOP_LEVEL_ARRAY_SIZE :: 0x930C;
    GL_TOP_LEVEL_ARRAY_STRIDE :: 0x930D;
    GL_LOCATION :: 0x930E;
    GL_LOCATION_INDEX :: 0x930F;
    GL_IS_PER_PATCH :: 0x92E7;
    GL_SHADER_STORAGE_BUFFER :: 0x90D2;
    GL_SHADER_STORAGE_BUFFER_BINDING :: 0x90D3;
    GL_SHADER_STORAGE_BUFFER_START :: 0x90D4;
    GL_SHADER_STORAGE_BUFFER_SIZE :: 0x90D5;
    GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS :: 0x90D6;
    GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS :: 0x90D7;
    GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS :: 0x90D8;
    GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS :: 0x90D9;
    GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS :: 0x90DA;
    GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS :: 0x90DB;
    GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS :: 0x90DC;
    GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS :: 0x90DD;
    GL_MAX_SHADER_STORAGE_BLOCK_SIZE :: 0x90DE;
    GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT :: 0x90DF;
    GL_SHADER_STORAGE_BARRIER_BIT :: 0x00002000;
    GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES :: 0x8F39;
    GL_DEPTH_STENCIL_TEXTURE_MODE :: 0x90EA;
    GL_TEXTURE_BUFFER_OFFSET :: 0x919D;
    GL_TEXTURE_BUFFER_SIZE :: 0x919E;
    GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT :: 0x919F;
    GL_TEXTURE_VIEW_MIN_LEVEL :: 0x82DB;
    GL_TEXTURE_VIEW_NUM_LEVELS :: 0x82DC;
    GL_TEXTURE_VIEW_MIN_LAYER :: 0x82DD;
    GL_TEXTURE_VIEW_NUM_LAYERS :: 0x82DE;
    GL_TEXTURE_IMMUTABLE_LEVELS :: 0x82DF;
    GL_VERTEX_ATTRIB_BINDING :: 0x82D4;
    GL_VERTEX_ATTRIB_RELATIVE_OFFSET :: 0x82D5;
    GL_VERTEX_BINDING_DIVISOR :: 0x82D6;
    GL_VERTEX_BINDING_OFFSET :: 0x82D7;
    GL_VERTEX_BINDING_STRIDE :: 0x82D8;
    GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET :: 0x82D9;
    GL_MAX_VERTEX_ATTRIB_BINDINGS :: 0x82DA;
    GL_VERTEX_BINDING_BUFFER :: 0x8F4F;
    GL_DISPLAY_LIST :: 0x82E7;

    // GL_VERSION_4_4
    GL_MAX_VERTEX_ATTRIB_STRIDE :: 0x82E5;
    GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED :: 0x8221;
    GL_TEXTURE_BUFFER_BINDING :: 0x8C2A;
    // GL_MAP_READ_BIT :: 0x0001;
    // GL_MAP_WRITE_BIT :: 0x0002;
    GL_MAP_PERSISTENT_BIT :: 0x0040;
    GL_MAP_COHERENT_BIT :: 0x0080;
    GL_DYNAMIC_STORAGE_BIT :: 0x0100;
    GL_CLIENT_STORAGE_BIT :: 0x0200;
    GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT :: 0x00004000;
    GL_BUFFER_IMMUTABLE_STORAGE :: 0x821F;
    GL_BUFFER_STORAGE_FLAGS :: 0x8220;
    GL_CLEAR_TEXTURE :: 0x9365;
    GL_LOCATION_COMPONENT :: 0x934A;
    // GL_TRANSFORM_FEEDBACK_BUFFER :: 0x8C8E;
    GL_TRANSFORM_FEEDBACK_BUFFER_INDEX :: 0x934B;
    GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE :: 0x934C;
    GL_QUERY_BUFFER :: 0x9192;
    GL_QUERY_BUFFER_BARRIER_BIT :: 0x00008000;
    GL_QUERY_BUFFER_BINDING :: 0x9193;
    GL_QUERY_RESULT_NO_WAIT :: 0x9194;
    GL_MIRROR_CLAMP_TO_EDGE :: 0x8743;
    // GL_STENCIL_INDEX :: 0x1901;
    // GL_STENCIL_INDEX8 :: 0x8D48;
    // GL_UNSIGNED_INT_10F_11F_11F_REV :: 0x8C3B;

    // GL_VERSION_4_5
    GL_CONTEXT_LOST :: 0x0507;
    // GL_LOWER_LEFT :: 0x8CA1;
    // GL_UPPER_LEFT :: 0x8CA2;
    GL_NEGATIVE_ONE_TO_ONE :: 0x935E;
    GL_ZERO_TO_ONE :: 0x935F;
    GL_CLIP_ORIGIN :: 0x935C;
    GL_CLIP_DEPTH_MODE :: 0x935D;
    GL_QUERY_WAIT_INVERTED :: 0x8E17;
    GL_QUERY_NO_WAIT_INVERTED :: 0x8E18;
    GL_QUERY_BY_REGION_WAIT_INVERTED :: 0x8E19;
    GL_QUERY_BY_REGION_NO_WAIT_INVERTED :: 0x8E1A;
    GL_MAX_CULL_DISTANCES :: 0x82F9;
    GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES :: 0x82FA;
    GL_TEXTURE_TARGET :: 0x1006;
    GL_QUERY_TARGET :: 0x82EA;
    // GL_TEXTURE_BINDING_1D :: 0x8068;
    // GL_TEXTURE_BINDING_1D_ARRAY :: 0x8C1C;
    // GL_TEXTURE_BINDING_2D :: 0x8069;
    // GL_TEXTURE_BINDING_2D_ARRAY :: 0x8C1D;
    // GL_TEXTURE_BINDING_2D_MULTISAMPLE :: 0x9104;
    // GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY :: 0x9105;
    // GL_TEXTURE_BINDING_3D :: 0x806A;
    // GL_TEXTURE_BINDING_BUFFER :: 0x8C2C;
    // GL_TEXTURE_BINDING_CUBE_MAP :: 0x8514;
    // GL_TEXTURE_BINDING_CUBE_MAP_ARRAY :: 0x900A;
    // GL_TEXTURE_BINDING_RECTANGLE :: 0x84F6;
    // GL_BACK :: 0x0405;
    // GL_NO_ERROR :: 0;
    GL_GUILTY_CONTEXT_RESET :: 0x8253;
    GL_INNOCENT_CONTEXT_RESET :: 0x8254;
    GL_UNKNOWN_CONTEXT_RESET :: 0x8255;
    GL_RESET_NOTIFICATION_STRATEGY :: 0x8256;
    GL_LOSE_CONTEXT_ON_RESET :: 0x8252;
    GL_NO_RESET_NOTIFICATION :: 0x8261;
    GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT :: 0x00000004;
    // GL_CONTEXT_LOST :: 0x0507;
    GL_CONTEXT_RELEASE_BEHAVIOR :: 0x82FB;
    // GL_NONE :: 0;
    GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH :: 0x82FC;

    // GL_VERSION_4_6
    // GL_CONTEXT_RELEASE_BEHAVIOR :: 0x82FB;
    // GL_NONE :: 0;
    // GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH :: 0x82FC;
    GL_SHADER_BINARY_FORMAT_SPIR_V :: 0x9551;
    GL_SPIR_V_BINARY :: 0x9552;
    GL_PARAMETER_BUFFER :: 0x80EE;
    GL_PARAMETER_BUFFER_BINDING :: 0x80EF;
    GL_CONTEXT_FLAG_NO_ERROR_BIT :: 0x00000008;
    GL_VERTICES_SUBMITTED :: 0x82EE;
    GL_PRIMITIVES_SUBMITTED :: 0x82EF;
    GL_VERTEX_SHADER_INVOCATIONS :: 0x82F0;
    GL_TESS_CONTROL_SHADER_PATCHES :: 0x82F1;
    GL_TESS_EVALUATION_SHADER_INVOCATIONS :: 0x82F2;
    // GL_GEOMETRY_SHADER_INVOCATIONS :: 0x887F;
    GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED :: 0x82F3;
    GL_FRAGMENT_SHADER_INVOCATIONS :: 0x82F4;
    GL_COMPUTE_SHADER_INVOCATIONS :: 0x82F5;
    GL_CLIPPING_INPUT_PRIMITIVES :: 0x82F6;
    GL_CLIPPING_OUTPUT_PRIMITIVES :: 0x82F7;
    GL_POLYGON_OFFSET_CLAMP :: 0x8E1B;
    GL_SPIR_V_EXTENSIONS :: 0x9553;
    GL_NUM_SPIR_V_EXTENSIONS :: 0x9554;
    GL_TEXTURE_MAX_ANISOTROPY :: 0x84FE;
    GL_MAX_TEXTURE_MAX_ANISOTROPY :: 0x84FF;
    GL_TRANSFORM_FEEDBACK_OVERFLOW :: 0x82EC;
    GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW :: 0x82ED;




    // Extension enums:

    // GL_ARB_clip_control
    // GL_LOWER_LEFT :: 0x8CA1;
    // GL_UPPER_LEFT :: 0x8CA2;
    // GL_NEGATIVE_ONE_TO_ONE :: 0x935E;
    // GL_ZERO_TO_ONE :: 0x935F;
    // GL_CLIP_ORIGIN :: 0x935C;
    // GL_CLIP_DEPTH_MODE :: 0x935D;

    // GL_ARB_debug_output
    GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB :: 0x8242;
    GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB :: 0x8243;
    GL_DEBUG_CALLBACK_FUNCTION_ARB :: 0x8244;
    GL_DEBUG_CALLBACK_USER_PARAM_ARB :: 0x8245;
    GL_DEBUG_SOURCE_API_ARB :: 0x8246;
    GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB :: 0x8247;
    GL_DEBUG_SOURCE_SHADER_COMPILER_ARB :: 0x8248;
    GL_DEBUG_SOURCE_THIRD_PARTY_ARB :: 0x8249;
    GL_DEBUG_SOURCE_APPLICATION_ARB :: 0x824A;
    GL_DEBUG_SOURCE_OTHER_ARB :: 0x824B;
    GL_DEBUG_TYPE_ERROR_ARB :: 0x824C;
    GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB :: 0x824D;
    GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB :: 0x824E;
    GL_DEBUG_TYPE_PORTABILITY_ARB :: 0x824F;
    GL_DEBUG_TYPE_PERFORMANCE_ARB :: 0x8250;
    GL_DEBUG_TYPE_OTHER_ARB :: 0x8251;
    GL_MAX_DEBUG_MESSAGE_LENGTH_ARB :: 0x9143;
    GL_MAX_DEBUG_LOGGED_MESSAGES_ARB :: 0x9144;
    GL_DEBUG_LOGGED_MESSAGES_ARB :: 0x9145;
    GL_DEBUG_SEVERITY_HIGH_ARB :: 0x9146;
    GL_DEBUG_SEVERITY_MEDIUM_ARB :: 0x9147;
    GL_DEBUG_SEVERITY_LOW_ARB :: 0x9148;

    // GL_ARB_direct_state_access
    // GL_TEXTURE_TARGET :: 0x1006;
    // GL_QUERY_TARGET :: 0x82EA;
    // GL_TEXTURE_BINDING_1D :: 0x8068;
    // GL_TEXTURE_BINDING_1D_ARRAY :: 0x8C1C;
    // GL_TEXTURE_BINDING_2D :: 0x8069;
    // GL_TEXTURE_BINDING_2D_ARRAY :: 0x8C1D;
    // GL_TEXTURE_BINDING_2D_MULTISAMPLE :: 0x9104;
    // GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY :: 0x9105;
    // GL_TEXTURE_BINDING_3D :: 0x806A;
    // GL_TEXTURE_BINDING_BUFFER :: 0x8C2C;
    // GL_TEXTURE_BINDING_CUBE_MAP :: 0x8514;
    // GL_TEXTURE_BINDING_CUBE_MAP_ARRAY :: 0x900A;
    // GL_TEXTURE_BINDING_RECTANGLE :: 0x84F6;

    // GL_ARB_parallel_shader_compile
    GL_MAX_SHADER_COMPILER_THREADS_ARB :: 0x91B0;
    GL_COMPLETION_STATUS_ARB :: 0x91B1;

    // GL_ARB_sampler_objects

    // GL_AMD_vertex_shader_viewport_index

    // GL_EXT_debug_label
    GL_PROGRAM_PIPELINE_OBJECT_EXT :: 0x8A4F;
    GL_PROGRAM_OBJECT_EXT :: 0x8B40;
    GL_SHADER_OBJECT_EXT :: 0x8B48;
    GL_BUFFER_OBJECT_EXT :: 0x9151;
    GL_QUERY_OBJECT_EXT :: 0x9153;
    GL_VERTEX_ARRAY_OBJECT_EXT :: 0x9154;
    // GL_SAMPLER :: 0x82E6;
    // GL_TRANSFORM_FEEDBACK :: 0x8E22;

    // GL_EXT_texture_compression_latc
    GL_COMPRESSED_LUMINANCE_LATC1_EXT :: 0x8C70;
    GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT :: 0x8C71;
    GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT :: 0x8C72;
    GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT :: 0x8C73;

    // GL_EXT_texture_compression_rgtc
    GL_COMPRESSED_RED_RGTC1_EXT :: 0x8DBB;
    GL_COMPRESSED_SIGNED_RED_RGTC1_EXT :: 0x8DBC;
    GL_COMPRESSED_RED_GREEN_RGTC2_EXT :: 0x8DBD;
    GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT :: 0x8DBE;

    // GL_EXT_texture_compression_s3tc
    GL_COMPRESSED_RGB_S3TC_DXT1_EXT :: 0x83F0;
    GL_COMPRESSED_RGBA_S3TC_DXT1_EXT :: 0x83F1;
    GL_COMPRESSED_RGBA_S3TC_DXT3_EXT :: 0x83F2;
    GL_COMPRESSED_RGBA_S3TC_DXT5_EXT :: 0x83F3;

    // GL_EXT_texture_filter_anisotropic
    GL_TEXTURE_MAX_ANISOTROPY_EXT :: 0x84FE;
    GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT :: 0x84FF;

    // GL_EXT_texture_sRGB
    GL_SRGB_EXT :: 0x8C40;
    GL_SRGB8_EXT :: 0x8C41;
    GL_SRGB_ALPHA_EXT :: 0x8C42;
    GL_SRGB8_ALPHA8_EXT :: 0x8C43;
    GL_SLUMINANCE_ALPHA_EXT :: 0x8C44;
    GL_SLUMINANCE8_ALPHA8_EXT :: 0x8C45;
    GL_SLUMINANCE_EXT :: 0x8C46;
    GL_SLUMINANCE8_EXT :: 0x8C47;
    GL_COMPRESSED_SRGB_EXT :: 0x8C48;
    GL_COMPRESSED_SRGB_ALPHA_EXT :: 0x8C49;
    GL_COMPRESSED_SLUMINANCE_EXT :: 0x8C4A;
    GL_COMPRESSED_SLUMINANCE_ALPHA_EXT :: 0x8C4B;
    GL_COMPRESSED_SRGB_S3TC_DXT1_EXT :: 0x8C4C;
    GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT :: 0x8C4D;
    GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT :: 0x8C4E;
    GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT :: 0x8C4F;

    // GL_KHR_debug
    // GL_DEBUG_OUTPUT_SYNCHRONOUS :: 0x8242;
    // GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH :: 0x8243;
    // GL_DEBUG_CALLBACK_FUNCTION :: 0x8244;
    // GL_DEBUG_CALLBACK_USER_PARAM :: 0x8245;
    // GL_DEBUG_SOURCE_API :: 0x8246;
    // GL_DEBUG_SOURCE_WINDOW_SYSTEM :: 0x8247;
    // GL_DEBUG_SOURCE_SHADER_COMPILER :: 0x8248;
    // GL_DEBUG_SOURCE_THIRD_PARTY :: 0x8249;
    // GL_DEBUG_SOURCE_APPLICATION :: 0x824A;
    // GL_DEBUG_SOURCE_OTHER :: 0x824B;
    // GL_DEBUG_TYPE_ERROR :: 0x824C;
    // GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR :: 0x824D;
    // GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR :: 0x824E;
    // GL_DEBUG_TYPE_PORTABILITY :: 0x824F;
    // GL_DEBUG_TYPE_PERFORMANCE :: 0x8250;
    // GL_DEBUG_TYPE_OTHER :: 0x8251;
    // GL_DEBUG_TYPE_MARKER :: 0x8268;
    // GL_DEBUG_TYPE_PUSH_GROUP :: 0x8269;
    // GL_DEBUG_TYPE_POP_GROUP :: 0x826A;
    // GL_DEBUG_SEVERITY_NOTIFICATION :: 0x826B;
    // GL_MAX_DEBUG_GROUP_STACK_DEPTH :: 0x826C;
    // GL_DEBUG_GROUP_STACK_DEPTH :: 0x826D;
    // GL_BUFFER :: 0x82E0;
    // GL_SHADER :: 0x82E1;
    // GL_PROGRAM :: 0x82E2;
    GL_VERTEX_ARRAY :: 0x8074;
    // GL_QUERY :: 0x82E3;
    // GL_PROGRAM_PIPELINE :: 0x82E4;
    // GL_SAMPLER :: 0x82E6;
    // GL_MAX_LABEL_LENGTH :: 0x82E8;
    // GL_MAX_DEBUG_MESSAGE_LENGTH :: 0x9143;
    // GL_MAX_DEBUG_LOGGED_MESSAGES :: 0x9144;
    // GL_DEBUG_LOGGED_MESSAGES :: 0x9145;
    // GL_DEBUG_SEVERITY_HIGH :: 0x9146;
    // GL_DEBUG_SEVERITY_MEDIUM :: 0x9147;
    // GL_DEBUG_SEVERITY_LOW :: 0x9148;
    // GL_DEBUG_OUTPUT :: 0x92E0;
    // GL_CONTEXT_FLAG_DEBUG_BIT :: 0x00000002;
    GL_STACK_OVERFLOW :: 0x0503;
    GL_STACK_UNDERFLOW :: 0x0504;
    GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR :: 0x8242;
    GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR :: 0x8243;
    GL_DEBUG_CALLBACK_FUNCTION_KHR :: 0x8244;
    GL_DEBUG_CALLBACK_USER_PARAM_KHR :: 0x8245;
    GL_DEBUG_SOURCE_API_KHR :: 0x8246;
    GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR :: 0x8247;
    GL_DEBUG_SOURCE_SHADER_COMPILER_KHR :: 0x8248;
    GL_DEBUG_SOURCE_THIRD_PARTY_KHR :: 0x8249;
    GL_DEBUG_SOURCE_APPLICATION_KHR :: 0x824A;
    GL_DEBUG_SOURCE_OTHER_KHR :: 0x824B;
    GL_DEBUG_TYPE_ERROR_KHR :: 0x824C;
    GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR :: 0x824D;
    GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR :: 0x824E;
    GL_DEBUG_TYPE_PORTABILITY_KHR :: 0x824F;
    GL_DEBUG_TYPE_PERFORMANCE_KHR :: 0x8250;
    GL_DEBUG_TYPE_OTHER_KHR :: 0x8251;
    GL_DEBUG_TYPE_MARKER_KHR :: 0x8268;
    GL_DEBUG_TYPE_PUSH_GROUP_KHR :: 0x8269;
    GL_DEBUG_TYPE_POP_GROUP_KHR :: 0x826A;
    GL_DEBUG_SEVERITY_NOTIFICATION_KHR :: 0x826B;
    GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR :: 0x826C;
    GL_DEBUG_GROUP_STACK_DEPTH_KHR :: 0x826D;
    GL_BUFFER_KHR :: 0x82E0;
    GL_SHADER_KHR :: 0x82E1;
    GL_PROGRAM_KHR :: 0x82E2;
    GL_VERTEX_ARRAY_KHR :: 0x8074;
    GL_QUERY_KHR :: 0x82E3;
    GL_PROGRAM_PIPELINE_KHR :: 0x82E4;
    GL_SAMPLER_KHR :: 0x82E6;
    GL_MAX_LABEL_LENGTH_KHR :: 0x82E8;
    GL_MAX_DEBUG_MESSAGE_LENGTH_KHR :: 0x9143;
    GL_MAX_DEBUG_LOGGED_MESSAGES_KHR :: 0x9144;
    GL_DEBUG_LOGGED_MESSAGES_KHR :: 0x9145;
    GL_DEBUG_SEVERITY_HIGH_KHR :: 0x9146;
    GL_DEBUG_SEVERITY_MEDIUM_KHR :: 0x9147;
    GL_DEBUG_SEVERITY_LOW_KHR :: 0x9148;
    GL_DEBUG_OUTPUT_KHR :: 0x92E0;
    GL_CONTEXT_FLAG_DEBUG_BIT_KHR :: 0x00000002;
    GL_STACK_OVERFLOW_KHR :: 0x0503;
    GL_STACK_UNDERFLOW_KHR :: 0x0504;
    // GL_DISPLAY_LIST :: 0x82E7;

    // GL_NV_depth_buffer_float
    GL_DEPTH_COMPONENT32F_NV :: 0x8DAB;
    GL_DEPTH32F_STENCIL8_NV :: 0x8DAC;
    GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV :: 0x8DAD;
    GL_DEPTH_BUFFER_FLOAT_MODE_NV :: 0x8DAF;

    // GL_S3_s3tc
    GL_RGB_S3TC :: 0x83A0;
    GL_RGB4_S3TC :: 0x83A1;
    GL_RGBA_S3TC :: 0x83A2;
    GL_RGBA4_S3TC :: 0x83A3;
    GL_RGBA_DXT5_S3TC :: 0x83A4;
    GL_RGBA4_DXT5_S3TC :: 0x83A5;


    // GL_ARB_direct_state_access
    // glCreateTransformFeedbacks : (n: GLsizei, ids: *GLuint) #c_call;
    // glTransformFeedbackBufferBase : (xfb: GLuint, index: GLuint, buffer: GLuint) #c_call;
    // glTransformFeedbackBufferRange : (xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    // glGetTransformFeedbackiv : (xfb: GLuint, pname: GLenum, param: *GLint) #c_call;
    // glGetTransformFeedbacki_v : (xfb: GLuint, pname: GLenum, index: GLuint, param: *GLint) #c_call;
    // glGetTransformFeedbacki64_v : (xfb: GLuint, pname: GLenum, index: GLuint, param: *GLint64) #c_call;
    // glCreateBuffers : (n: GLsizei, buffers: *GLuint) #c_call;
    // glNamedBufferStorage : (buffer: GLuint, size: GLsizeiptr, data: *void, flags: GLbitfield) #c_call;
    // glNamedBufferData : (buffer: GLuint, size: GLsizeiptr, data: *void, usage: GLenum) #c_call;
    // glNamedBufferSubData : (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    // glCopyNamedBufferSubData : (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) #c_call;
    // glClearNamedBufferData : (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: *void) #c_call;
    // glClearNamedBufferSubData : (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: *void) #c_call;
    // glMapNamedBuffer : (buffer: GLuint, access: GLenum) #c_call;
    // glMapNamedBufferRange : (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) #c_call;
    // glUnmapNamedBuffer : (buffer: GLuint) -> GLboolean #c_call;
    // glFlushMappedNamedBufferRange : (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) #c_call;
    // glGetNamedBufferParameteriv : (buffer: GLuint, pname: GLenum, params: *GLint) #c_call;
    // glGetNamedBufferParameteri64v : (buffer: GLuint, pname: GLenum, params: *GLint64) #c_call;
    // glGetNamedBufferPointerv : (buffer: GLuint, pname: GLenum, params: **void) #c_call;
    // glGetNamedBufferSubData : (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    // glCreateFramebuffers : (n: GLsizei, framebuffers: *GLuint) #c_call;
    // glNamedFramebufferRenderbuffer : (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) #c_call;
    // glNamedFramebufferParameteri : (framebuffer: GLuint, pname: GLenum, param: GLint) #c_call;
    // glNamedFramebufferTexture : (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) #c_call;
    // glNamedFramebufferTextureLayer : (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) #c_call;
    // glNamedFramebufferDrawBuffer : (framebuffer: GLuint, buf: GLenum) #c_call;
    // glNamedFramebufferDrawBuffers : (framebuffer: GLuint, n: GLsizei, bufs: *GLenum) #c_call;
    // glNamedFramebufferReadBuffer : (framebuffer: GLuint, src: GLenum) #c_call;
    // glInvalidateNamedFramebufferData : (framebuffer: GLuint, numAttachments: GLsizei, attachments: *GLenum) #c_call;
    // glInvalidateNamedFramebufferSubData : (framebuffer: GLuint, numAttachments: GLsizei, attachments: *GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    // glClearNamedFramebufferiv : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLint) #c_call;
    // glClearNamedFramebufferuiv : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLuint) #c_call;
    // glClearNamedFramebufferfv : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLfloat) #c_call;
    // glClearNamedFramebufferfi : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) #c_call;
    // glBlitNamedFramebuffer : (readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) #c_call;
    // glCheckNamedFramebufferStatus : (framebuffer: GLuint, target: GLenum) -> GLenum #c_call;
    // glGetNamedFramebufferParameteriv : (framebuffer: GLuint, pname: GLenum, param: *GLint) #c_call;
    // glGetNamedFramebufferAttachmentParameteriv : (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: *GLint) #c_call;
    // glCreateRenderbuffers : (n: GLsizei, renderbuffers: *GLuint) #c_call;
    // glNamedRenderbufferStorage : (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    // glNamedRenderbufferStorageMultisample : (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    // glGetNamedRenderbufferParameteriv : (renderbuffer: GLuint, pname: GLenum, params: *GLint) #c_call;
    // glCreateTextures : (target: GLenum, n: GLsizei, textures: *GLuint) #c_call;
    // glTextureBuffer : (texture: GLuint, internalformat: GLenum, buffer: GLuint) #c_call;
    // glTextureBufferRange : (texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    // glTextureStorage1D : (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei) #c_call;
    // glTextureStorage2D : (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    // glTextureStorage3D : (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) #c_call;
    // glTextureStorage2DMultisample : (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    // glTextureStorage3DMultisample : (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    // glTextureSubImage1D : (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    // glTextureSubImage2D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    // glTextureSubImage3D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    // glCompressedTextureSubImage1D : (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    // glCompressedTextureSubImage2D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    // glCompressedTextureSubImage3D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    // glCopyTextureSubImage1D : (texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) #c_call;
    // glCopyTextureSubImage2D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    // glCopyTextureSubImage3D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    // glTextureParameterf : (texture: GLuint, pname: GLenum, param: GLfloat) #c_call;
    // glTextureParameterfv : (texture: GLuint, pname: GLenum, param: *GLfloat) #c_call;
    // glTextureParameteri : (texture: GLuint, pname: GLenum, param: GLint) #c_call;
    // glTextureParameterIiv : (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    // glTextureParameterIuiv : (texture: GLuint, pname: GLenum, params: *GLuint) #c_call;
    // glTextureParameteriv : (texture: GLuint, pname: GLenum, param: *GLint) #c_call;
    // glGenerateTextureMipmap : (texture: GLuint) #c_call;
    // glBindTextureUnit : (unit: GLuint, texture: GLuint) #c_call;
    // glGetTextureImage : (texture: GLuint, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: *void) #c_call;
    // glGetCompressedTextureImage : (texture: GLuint, level: GLint, bufSize: GLsizei, pixels: *void) #c_call;
    // glGetTextureLevelParameterfv : (texture: GLuint, level: GLint, pname: GLenum, params: *GLfloat) #c_call;
    // glGetTextureLevelParameteriv : (texture: GLuint, level: GLint, pname: GLenum, params: *GLint) #c_call;
    // glGetTextureParameterfv : (texture: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    // glGetTextureParameterIiv : (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    // glGetTextureParameterIuiv : (texture: GLuint, pname: GLenum, params: *GLuint) #c_call;
    // glGetTextureParameteriv : (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    // glCreateVertexArrays : (n: GLsizei, arrays: *GLuint) #c_call;
    // glDisableVertexArrayAttrib : (vaobj: GLuint, index: GLuint) #c_call;
    // glEnableVertexArrayAttrib : (vaobj: GLuint, index: GLuint) #c_call;
    // glVertexArrayElementBuffer : (vaobj: GLuint, buffer: GLuint) #c_call;
    // glVertexArrayVertexBuffer : (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) #c_call;
    // glVertexArrayVertexBuffers : (vaobj: GLuint, first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, strides: *GLsizei) #c_call;
    // glVertexArrayAttribBinding : (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) #c_call;
    // glVertexArrayAttribFormat : (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) #c_call;
    // glVertexArrayAttribIFormat : (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    // glVertexArrayAttribLFormat : (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    // glVertexArrayBindingDivisor : (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) #c_call;
    // glGetVertexArrayiv : (vaobj: GLuint, pname: GLenum, param: *GLint) #c_call;
    // glGetVertexArrayIndexediv : (vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint) #c_call;
    // glGetVertexArrayIndexed64iv : (vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint64) #c_call;
    // glCreateSamplers : (n: GLsizei, samplers: *GLuint) #c_call;
    // glCreateProgramPipelines : (n: GLsizei, pipelines: *GLuint) #c_call;
    // glCreateQueries : (target: GLenum, n: GLsizei, ids: *GLuint) #c_call;
    // glGetQueryBufferObjecti64v : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    // glGetQueryBufferObjectiv : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    // glGetQueryBufferObjectui64v : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    // glGetQueryBufferObjectuiv : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;

    // GL_EXT_texture_compression_latc

    // GL_EXT_texture_compression_rgtc

    // GL_EXT_texture_compression_s3tc

    // GL_EXT_texture_filter_anisotropic

    // GL_EXT_texture_sRGB

    // GL_KHR_debug
    // glDebugMessageControl : (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    // glDebugMessageInsert : (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    // glDebugMessageCallback : (callback: GLDEBUGPROC, userParam: *void) #c_call;
    // glGetDebugMessageLog : (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;
    // glPushDebugGroup : (source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) #c_call;
    // glPopDebugGroup : () #c_call;
    // glObjectLabel : (identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) #c_call;
    // glGetObjectLabel : (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    // glObjectPtrLabel : (ptr: *void, length: GLsizei, label: *GLchar) #c_call;
    // glGetObjectPtrLabel : (ptr: *void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    // GL_S3_s3tc

    GLX_EXT_swap_control : bool;
    GLX_EXT_swap_control_tear : bool;

    GLX_SWAP_INTERVAL_EXT             :: 0x20F1;
    GLX_MAX_SWAP_INTERVAL_EXT         :: 0x20F2;

    // Core functions:

    // GL_VERSION_1_0
    glBegin : (mode: GLenum) #c_call;
    glEnd : () #c_call;
    glColor4f : (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glVertex2f : (x: GLfloat, y: GLfloat) #c_call;
    glCullFace : (mode: GLenum) #c_call;
    glFrontFace : (mode: GLenum) #c_call;
    glHint : (target: GLenum, mode: GLenum) #c_call;
    glLineWidth : (width: GLfloat) #c_call;
    glPointSize : (size: GLfloat) #c_call;
    glPolygonMode : (face: GLenum, mode: GLenum) #c_call;
    glScissor : (x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glTexParameterf : (target: GLenum, pname: GLenum, param: GLfloat) #c_call;
    glTexParameterfv : (target: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glTexParameteri : (target: GLenum, pname: GLenum, param: GLint) #c_call;
    glTexParameteriv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glTexImage1D : (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTexImage2D : (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glDrawBuffer : (buf: GLenum) #c_call;
    glClear : (mask: GLbitfield) #c_call;
    glClearColor : (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glClearStencil : (s: GLint) #c_call;
    glClearDepth : (depth: GLdouble) #c_call;
    glStencilMask : (mask: GLuint) #c_call;
    glColorMask : (red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) #c_call;
    glDepthMask : (flag: GLboolean) #c_call;
    glDisable : (cap: GLenum) #c_call;
    glEnable : (cap: GLenum) #c_call;
    glFinish : () #c_call;
    glFlush : () #c_call;
    glBlendFunc : (sfactor: GLenum, dfactor: GLenum) #c_call;
    glLogicOp : (opcode: GLenum) #c_call;
    glStencilFunc : (func: GLenum, ref: GLint, mask: GLuint) #c_call;
    glStencilOp : (fail: GLenum, zfail: GLenum, zpass: GLenum) #c_call;
    glDepthFunc : (func: GLenum) #c_call;
    glPixelStoref : (pname: GLenum, param: GLfloat) #c_call;
    glPixelStorei : (pname: GLenum, param: GLint) #c_call;
    glReadBuffer : (src: GLenum) #c_call;
    glReadPixels : (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glGetBooleanv : (pname: GLenum, data: *GLboolean) #c_call;
    glGetDoublev : (pname: GLenum, data: *GLdouble) #c_call;
    glGetError : () -> GLenum #c_call;
    glGetFloatv : (pname: GLenum, data: *GLfloat) #c_call;
    glGetIntegerv : (pname: GLenum, data: *GLint) #c_call;
    glGetString : (name: GLenum) -> *GLubyte #c_call;
    glGetTexImage : (target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glGetTexParameterfv : (target: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glGetTexParameteriv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetTexLevelParameterfv : (target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) #c_call;
    glGetTexLevelParameteriv : (target: GLenum, level: GLint, pname: GLenum, params: *GLint) #c_call;
    glIsEnabled : (cap: GLenum) -> GLboolean #c_call;
    glDepthRange : (near: GLdouble, far: GLdouble) #c_call;
    glViewport : (x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;

    // GL_VERSION_1_1
    glDrawArrays : (mode: GLenum, first: GLint, count: GLsizei) #c_call;
    glDrawElements : (mode: GLenum, count: GLsizei, type: GLenum, indices: *void) #c_call;
    glPolygonOffset : (factor: GLfloat, units: GLfloat) #c_call;
    glCopyTexImage1D : (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) #c_call;
    glCopyTexImage2D : (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) #c_call;
    glCopyTexSubImage1D : (target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) #c_call;
    glCopyTexSubImage2D : (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glTexSubImage1D : (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTexSubImage2D : (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glBindTexture : (target: GLenum, texture: GLuint) #c_call;
    glDeleteTextures : (n: GLsizei, textures: *GLuint) #c_call;
    glGenTextures : (n: GLsizei, textures: *GLuint) #c_call;
    glIsTexture : (texture: GLuint) -> GLboolean #c_call;

    // GL_VERSION_1_2
    glDrawRangeElements : (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: *void) #c_call;
    glTexImage3D : (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTexSubImage3D : (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glCopyTexSubImage3D : (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;

    // GL_VERSION_1_3
    glActiveTexture : (texture: GLenum) #c_call;
    glSampleCoverage : (value: GLfloat, invert: GLboolean) #c_call;
    glCompressedTexImage3D : (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexImage2D : (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexImage1D : (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexSubImage3D : (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexSubImage2D : (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexSubImage1D : (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glGetCompressedTexImage : (target: GLenum, level: GLint, img: *void) #c_call;

    // GL_VERSION_1_4
    glBlendFuncSeparate : (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) #c_call;
    glMultiDrawArrays : (mode: GLenum, first: *GLint, count: *GLsizei, drawcount: GLsizei) #c_call;
    glMultiDrawElements : (mode: GLenum, count: *GLsizei, type: GLenum, indices: **void, drawcount: GLsizei) #c_call;
    glPointParameterf : (pname: GLenum, param: GLfloat) #c_call;
    glPointParameterfv : (pname: GLenum, params: *GLfloat) #c_call;
    glPointParameteri : (pname: GLenum, param: GLint) #c_call;
    glPointParameteriv : (pname: GLenum, params: *GLint) #c_call;
    glBlendColor : (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glBlendEquation : (mode: GLenum) #c_call;

    // GL_VERSION_1_5
    glGenQueries : (n: GLsizei, ids: *GLuint) #c_call;
    glDeleteQueries : (n: GLsizei, ids: *GLuint) #c_call;
    glIsQuery : (id: GLuint) -> GLboolean #c_call;
    glBeginQuery : (target: GLenum, id: GLuint) #c_call;
    glEndQuery : (target: GLenum) #c_call;
    glGetQueryiv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetQueryObjectiv : (id: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetQueryObjectuiv : (id: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glBindBuffer : (target: GLenum, buffer: GLuint) #c_call;
    glDeleteBuffers : (n: GLsizei, buffers: *GLuint) #c_call;
    glGenBuffers : (n: GLsizei, buffers: *GLuint) #c_call;
    glIsBuffer : (buffer: GLuint) -> GLboolean #c_call;
    glBufferData : (target: GLenum, size: GLsizeiptr, data: *void, usage: GLenum) #c_call;
    glBufferSubData : (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glGetBufferSubData : (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glMapBuffer : (target: GLenum, access: GLenum) -> *void #c_call;
    glUnmapBuffer : (target: GLenum) -> GLboolean #c_call;
    glGetBufferParameteriv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetBufferPointerv : (target: GLenum, pname: GLenum, params: **void) #c_call;

    // GL_VERSION_2_0
    glBlendEquationSeparate : (modeRGB: GLenum, modeAlpha: GLenum) #c_call;
    glDrawBuffers : (n: GLsizei, bufs: *GLenum) #c_call;
    glStencilOpSeparate : (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) #c_call;
    glStencilFuncSeparate : (face: GLenum, func: GLenum, ref: GLint, mask: GLuint) #c_call;
    glStencilMaskSeparate : (face: GLenum, mask: GLuint) #c_call;
    glAttachShader : (program: GLuint, shader: GLuint) #c_call;
    glBindAttribLocation : (program: GLuint, index: GLuint, name: *GLchar) #c_call;
    glCompileShader : (shader: GLuint) #c_call;
    glCreateProgram : () -> GLuint #c_call;
    glCreateShader : (type: GLenum) -> GLuint #c_call;
    glDeleteProgram : (program: GLuint) #c_call;
    glDeleteShader : (shader: GLuint) #c_call;
    glDetachShader : (program: GLuint, shader: GLuint) #c_call;
    glDisableVertexAttribArray : (index: GLuint) #c_call;
    glEnableVertexAttribArray : (index: GLuint) #c_call;
    glGetActiveAttrib : (program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type: *GLenum, name: *GLchar) #c_call;
    glGetActiveUniform : (program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type: *GLenum, name: *GLchar) #c_call;
    glGetAttachedShaders : (program: GLuint, maxCount: GLsizei, count: *GLsizei, shaders: *GLuint) #c_call;
    glGetAttribLocation : (program: GLuint, name: *GLchar) -> GLint #c_call;
    glGetProgramiv : (program: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetProgramInfoLog : (program: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) #c_call;
    glGetShaderiv : (shader: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetShaderInfoLog : (shader: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) #c_call;
    glGetShaderSource : (shader: GLuint, bufSize: GLsizei, length: *GLsizei, source: *GLchar) #c_call;
    glGetUniformLocation : (program: GLuint, name: *GLchar) -> GLint #c_call;
    glGetUniformfv : (program: GLuint, location: GLint, params: *GLfloat) #c_call;
    glGetUniformiv : (program: GLuint, location: GLint, params: *GLint) #c_call;
    glGetVertexAttribdv : (index: GLuint, pname: GLenum, params: *GLdouble) #c_call;
    glGetVertexAttribfv : (index: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    glGetVertexAttribiv : (index: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetVertexAttribPointerv : (index: GLuint, pname: GLenum, pointer: **void) #c_call;
    glIsProgram : (program: GLuint) -> GLboolean #c_call;
    glIsShader : (shader: GLuint) -> GLboolean #c_call;
    glLinkProgram : (program: GLuint) #c_call;
    glShaderSource : (shader: GLuint, count: GLsizei, str: **GLchar, length: *GLint) #c_call;
    glUseProgram : (program: GLuint) #c_call;
    glUniform1f : (location: GLint, v0: GLfloat) #c_call;
    glUniform2f : (location: GLint, v0: GLfloat, v1: GLfloat) #c_call;
    glUniform3f : (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) #c_call;
    glUniform4f : (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) #c_call;
    glUniform1i : (location: GLint, v0: GLint) #c_call;
    glUniform2i : (location: GLint, v0: GLint, v1: GLint) #c_call;
    glUniform3i : (location: GLint, v0: GLint, v1: GLint, v2: GLint) #c_call;
    glUniform4i : (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) #c_call;
    glUniform1fv : (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform2fv : (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform3fv : (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform4fv : (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform1iv : (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniform2iv : (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniform3iv : (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniform4iv : (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniformMatrix2fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix3fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix4fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glValidateProgram : (program: GLuint) #c_call;
    glVertexAttrib1d : (index: GLuint, x: GLdouble) #c_call;
    glVertexAttrib1dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib1f : (index: GLuint, x: GLfloat) #c_call;
    glVertexAttrib1fv : (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib1s : (index: GLuint, x: GLshort) #c_call;
    glVertexAttrib1sv : (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib2d : (index: GLuint, x: GLdouble, y: GLdouble) #c_call;
    glVertexAttrib2dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib2f : (index: GLuint, x: GLfloat, y: GLfloat) #c_call;
    glVertexAttrib2fv : (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib2s : (index: GLuint, x: GLshort, y: GLshort) #c_call;
    glVertexAttrib2sv : (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib3d : (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glVertexAttrib3dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib3f : (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glVertexAttrib3fv : (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib3s : (index: GLuint, x: GLshort, y: GLshort, z: GLshort) #c_call;
    glVertexAttrib3sv : (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib4Nbv : (index: GLuint, v: *GLbyte) #c_call;
    glVertexAttrib4Niv : (index: GLuint, v: *GLint) #c_call;
    glVertexAttrib4Nsv : (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib4Nub : (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) #c_call;
    glVertexAttrib4Nubv : (index: GLuint, v: *GLubyte) #c_call;
    glVertexAttrib4Nuiv : (index: GLuint, v: *GLuint) #c_call;
    glVertexAttrib4Nusv : (index: GLuint, v: *GLushort) #c_call;
    glVertexAttrib4bv : (index: GLuint, v: *GLbyte) #c_call;
    glVertexAttrib4d : (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) #c_call;
    glVertexAttrib4dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib4f : (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) #c_call;
    glVertexAttrib4fv : (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib4iv : (index: GLuint, v: *GLint) #c_call;
    glVertexAttrib4s : (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) #c_call;
    glVertexAttrib4sv : (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib4ubv : (index: GLuint, v: *GLubyte) #c_call;
    glVertexAttrib4uiv : (index: GLuint, v: *GLuint) #c_call;
    glVertexAttrib4usv : (index: GLuint, v: *GLushort) #c_call;
    glVertexAttribPointer : (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *void) #c_call;

    // GL_VERSION_2_1
    glUniformMatrix2x3fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix3x2fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix2x4fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix4x2fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix3x4fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix4x3fv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;

    // GL_VERSION_3_0
    glColorMaski : (index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) #c_call;
    glGetBooleani_v : (target: GLenum, index: GLuint, data: *GLboolean) #c_call;
    glGetIntegeri_v : (target: GLenum, index: GLuint, data: *GLint) #c_call;
    glEnablei : (target: GLenum, index: GLuint) #c_call;
    glDisablei : (target: GLenum, index: GLuint) #c_call;
    glIsEnabledi : (target: GLenum, index: GLuint) -> GLboolean #c_call;
    glBeginTransformFeedback : (primitiveMode: GLenum) #c_call;
    glEndTransformFeedback : () #c_call;
    glBindBufferRange : (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glBindBufferBase : (target: GLenum, index: GLuint, buffer: GLuint) #c_call;
    glTransformFeedbackVaryings : (program: GLuint, count: GLsizei, varyings: **GLchar, bufferMode: GLenum) #c_call;
    glGetTransformFeedbackVarying : (program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type: *GLenum, name: *GLchar) #c_call;
    glClampColor : (target: GLenum, clamp: GLenum) #c_call;
    glBeginConditionalRender : (id: GLuint, mode: GLenum) #c_call;
    glEndConditionalRender : () #c_call;
    glVertexAttribIPointer : (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glGetVertexAttribIiv : (index: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetVertexAttribIuiv : (index: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glVertexAttribI1i : (index: GLuint, x: GLint) #c_call;
    glVertexAttribI2i : (index: GLuint, x: GLint, y: GLint) #c_call;
    glVertexAttribI3i : (index: GLuint, x: GLint, y: GLint, z: GLint) #c_call;
    glVertexAttribI4i : (index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) #c_call;
    glVertexAttribI1ui : (index: GLuint, x: GLuint) #c_call;
    glVertexAttribI2ui : (index: GLuint, x: GLuint, y: GLuint) #c_call;
    glVertexAttribI3ui : (index: GLuint, x: GLuint, y: GLuint, z: GLuint) #c_call;
    glVertexAttribI4ui : (index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) #c_call;
    glVertexAttribI1iv : (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI2iv : (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI3iv : (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI4iv : (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI1uiv : (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI2uiv : (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI3uiv : (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI4uiv : (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI4bv : (index: GLuint, v: *GLbyte) #c_call;
    glVertexAttribI4sv : (index: GLuint, v: *GLshort) #c_call;
    glVertexAttribI4ubv : (index: GLuint, v: *GLubyte) #c_call;
    glVertexAttribI4usv : (index: GLuint, v: *GLushort) #c_call;
    glGetUniformuiv : (program: GLuint, location: GLint, params: *GLuint) #c_call;
    glBindFragDataLocation : (program: GLuint, color: GLuint, name: *GLchar) #c_call;
    glGetFragDataLocation : (program: GLuint, name: *GLchar) -> GLint #c_call;
    glUniform1ui : (location: GLint, v0: GLuint) #c_call;
    glUniform2ui : (location: GLint, v0: GLuint, v1: GLuint) #c_call;
    glUniform3ui : (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) #c_call;
    glUniform4ui : (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) #c_call;
    glUniform1uiv : (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glUniform2uiv : (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glUniform3uiv : (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glUniform4uiv : (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glTexParameterIiv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glTexParameterIuiv : (target: GLenum, pname: GLenum, params: *GLuint) #c_call;
    glGetTexParameterIiv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetTexParameterIuiv : (target: GLenum, pname: GLenum, params: *GLuint) #c_call;
    glClearBufferiv : (buffer: GLenum, drawbuffer: GLint, value: *GLint) #c_call;
    glClearBufferuiv : (buffer: GLenum, drawbuffer: GLint, value: *GLuint) #c_call;
    glClearBufferfv : (buffer: GLenum, drawbuffer: GLint, value: *GLfloat) #c_call;
    glClearBufferfi : (buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) #c_call;
    glGetStringi : (name: GLenum, index: GLuint) -> *GLubyte #c_call;
    glIsRenderbuffer : (renderbuffer: GLuint) -> GLboolean #c_call;
    glBindRenderbuffer : (target: GLenum, renderbuffer: GLuint) #c_call;
    glDeleteRenderbuffers : (n: GLsizei, renderbuffers: *GLuint) #c_call;
    glGenRenderbuffers : (n: GLsizei, renderbuffers: *GLuint) #c_call;
    glRenderbufferStorage : (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glGetRenderbufferParameteriv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glIsFramebuffer : (framebuffer: GLuint) -> GLboolean #c_call;
    glBindFramebuffer : (target: GLenum, framebuffer: GLuint) #c_call;
    glDeleteFramebuffers : (n: GLsizei, framebuffers: *GLuint) #c_call;
    glGenFramebuffers : (n: GLsizei, framebuffers: *GLuint) #c_call;
    glCheckFramebufferStatus : (target: GLenum) -> GLenum #c_call;
    glFramebufferTexture1D : (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) #c_call;
    glFramebufferTexture2D : (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) #c_call;
    glFramebufferTexture3D : (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) #c_call;
    glFramebufferRenderbuffer : (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) #c_call;
    glGetFramebufferAttachmentParameteriv : (target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGenerateMipmap : (target: GLenum) #c_call;
    glBlitFramebuffer : (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) #c_call;
    glRenderbufferStorageMultisample : (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glFramebufferTextureLayer : (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) #c_call;
    glMapBufferRange : (target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *void #c_call;
    glFlushMappedBufferRange : (target: GLenum, offset: GLintptr, length: GLsizeiptr) #c_call;
    glBindVertexArray : (array: GLuint) #c_call;
    glDeleteVertexArrays : (n: GLsizei, arrays: *GLuint) #c_call;
    glGenVertexArrays : (n: GLsizei, arrays: *GLuint) #c_call;
    glIsVertexArray : (array: GLuint) -> GLboolean #c_call;

    // GL_VERSION_3_1
    glDrawArraysInstanced : (mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei) #c_call;
    glDrawElementsInstanced : (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, instancecount: GLsizei) #c_call;
    glTexBuffer : (target: GLenum, internalformat: GLenum, buffer: GLuint) #c_call;
    glPrimitiveRestartIndex : (index: GLuint) #c_call;
    glCopyBufferSubData : (readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) #c_call;
    glGetUniformIndices : (program: GLuint, uniformCount: GLsizei, uniformNames: **GLchar, uniformIndices: *GLuint) #c_call;
    glGetActiveUniformsiv : (program: GLuint, uniformCount: GLsizei, uniformIndices: *GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetActiveUniformName : (program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformName: *GLchar) #c_call;
    glGetUniformBlockIndex : (program: GLuint, uniformBlockName: *GLchar) -> GLuint #c_call;
    glGetActiveUniformBlockiv : (program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetActiveUniformBlockName : (program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformBlockName: *GLchar) #c_call;
    glUniformBlockBinding : (program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint) #c_call;
    // glBindBufferRange : (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    // glBindBufferBase : (target: GLenum, index: GLuint, buffer: GLuint) #c_call;
    // glGetIntegeri_v : (target: GLenum, index: GLuint, data: *GLint) #c_call;

    // GL_VERSION_3_2
    glDrawElementsBaseVertex : (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, basevertex: GLint) #c_call;
    glDrawRangeElementsBaseVertex : (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: *void, basevertex: GLint) #c_call;
    glDrawElementsInstancedBaseVertex : (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, instancecount: GLsizei, basevertex: GLint) #c_call;
    glMultiDrawElementsBaseVertex : (mode: GLenum, count: *GLsizei, type: GLenum, indices: **void, drawcount: GLsizei, basevertex: *GLint) #c_call;
    glProvokingVertex : (mode: GLenum) #c_call;
    glFenceSync : (condition: GLenum, flags: GLbitfield) -> GLsync #c_call;
    glIsSync : (sync: GLsync) -> GLboolean #c_call;
    glDeleteSync : (sync: GLsync) #c_call;
    glClientWaitSync : (sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum #c_call;
    glWaitSync : (sync: GLsync, flags: GLbitfield, timeout: GLuint64) #c_call;
    glGetInteger64v : (pname: GLenum, data: *GLint64) #c_call;
    glGetSynciv : (sync: GLsync, pname: GLenum, bufSize: GLsizei, length: *GLsizei, values: *GLint) #c_call;
    glGetInteger64i_v : (target: GLenum, index: GLuint, data: *GLint64) #c_call;
    glGetBufferParameteri64v : (target: GLenum, pname: GLenum, params: *GLint64) #c_call;
    glFramebufferTexture : (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) #c_call;
    glTexImage2DMultisample : (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTexImage3DMultisample : (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glGetMultisamplefv : (pname: GLenum, index: GLuint, val: *GLfloat) #c_call;
    glSampleMaski : (maskNumber: GLuint, mask: GLbitfield) #c_call;

    // GL_VERSION_3_3
    glBindFragDataLocationIndexed : (program: GLuint, colorNumber: GLuint, index: GLuint, name: *GLchar) #c_call;
    glGetFragDataIndex : (program: GLuint, name: *GLchar) -> GLint #c_call;
    glGenSamplers : (count: GLsizei, samplers: *GLuint) #c_call;
    glDeleteSamplers : (count: GLsizei, samplers: *GLuint) #c_call;
    glIsSampler : (sampler: GLuint) -> GLboolean #c_call;
    glBindSampler : (unit: GLuint, sampler: GLuint) #c_call;
    glSamplerParameteri : (sampler: GLuint, pname: GLenum, param: GLint) #c_call;
    glSamplerParameteriv : (sampler: GLuint, pname: GLenum, param: *GLint) #c_call;
    glSamplerParameterf : (sampler: GLuint, pname: GLenum, param: GLfloat) #c_call;
    glSamplerParameterfv : (sampler: GLuint, pname: GLenum, param: *GLfloat) #c_call;
    glSamplerParameterIiv : (sampler: GLuint, pname: GLenum, param: *GLint) #c_call;
    glSamplerParameterIuiv : (sampler: GLuint, pname: GLenum, param: *GLuint) #c_call;
    glGetSamplerParameteriv : (sampler: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetSamplerParameterIiv : (sampler: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetSamplerParameterfv : (sampler: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    glGetSamplerParameterIuiv : (sampler: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glQueryCounter : (id: GLuint, target: GLenum) #c_call;
    glGetQueryObjecti64v : (id: GLuint, pname: GLenum, params: *GLint64) #c_call;
    glGetQueryObjectui64v : (id: GLuint, pname: GLenum, params: *GLuint64) #c_call;
    glVertexAttribDivisor : (index: GLuint, divisor: GLuint) #c_call;
    glVertexAttribP1ui : (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP1uiv : (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexAttribP2ui : (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP2uiv : (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexAttribP3ui : (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP3uiv : (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexAttribP4ui : (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP4uiv : (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexP2ui : (type: GLenum, value: GLuint) #c_call;
    glVertexP2uiv : (type: GLenum, value: *GLuint) #c_call;
    glVertexP3ui : (type: GLenum, value: GLuint) #c_call;
    glVertexP3uiv : (type: GLenum, value: *GLuint) #c_call;
    glVertexP4ui : (type: GLenum, value: GLuint) #c_call;
    glVertexP4uiv : (type: GLenum, value: *GLuint) #c_call;
    glTexCoordP1ui : (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP1uiv : (type: GLenum, coords: *GLuint) #c_call;
    glTexCoordP2ui : (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP2uiv : (type: GLenum, coords: *GLuint) #c_call;
    glTexCoordP3ui : (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP3uiv : (type: GLenum, coords: *GLuint) #c_call;
    glTexCoordP4ui : (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP4uiv : (type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP1ui : (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP1uiv : (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP2ui : (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP2uiv : (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP3ui : (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP3uiv : (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP4ui : (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP4uiv : (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glNormalP3ui : (type: GLenum, coords: GLuint) #c_call;
    glNormalP3uiv : (type: GLenum, coords: *GLuint) #c_call;
    glColorP3ui : (type: GLenum, color: GLuint) #c_call;
    glColorP3uiv : (type: GLenum, color: *GLuint) #c_call;
    glColorP4ui : (type: GLenum, color: GLuint) #c_call;
    glColorP4uiv : (type: GLenum, color: *GLuint) #c_call;
    glSecondaryColorP3ui : (type: GLenum, color: GLuint) #c_call;
    glSecondaryColorP3uiv : (type: GLenum, color: *GLuint) #c_call;

    // GL_VERSION_4_0
    glMinSampleShading : (value: GLfloat) #c_call;
    glBlendEquationi : (buf: GLuint, mode: GLenum) #c_call;
    glBlendEquationSeparatei : (buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum) #c_call;
    glBlendFunci : (buf: GLuint, src: GLenum, dst: GLenum) #c_call;
    glBlendFuncSeparatei : (buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum) #c_call;
    glDrawArraysIndirect : (mode: GLenum, indirect: *void) #c_call;
    glDrawElementsIndirect : (mode: GLenum, type: GLenum, indirect: *void) #c_call;
    glUniform1d : (location: GLint, x: GLdouble) #c_call;
    glUniform2d : (location: GLint, x: GLdouble, y: GLdouble) #c_call;
    glUniform3d : (location: GLint, x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glUniform4d : (location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) #c_call;
    glUniform1dv : (location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glUniform2dv : (location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glUniform3dv : (location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glUniform4dv : (location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glUniformMatrix2dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix3dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix4dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix2x3dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix2x4dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix3x2dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix3x4dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix4x2dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glUniformMatrix4x3dv : (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glGetUniformdv : (program: GLuint, location: GLint, params: *GLdouble) #c_call;
    glGetSubroutineUniformLocation : (program: GLuint, shadertype: GLenum, name: *GLchar) -> GLint #c_call;
    glGetSubroutineIndex : (program: GLuint, shadertype: GLenum, name: *GLchar) -> GLuint #c_call;
    glGetActiveSubroutineUniformiv : (program: GLuint, shadertype: GLenum, index: GLuint, pname: GLenum, values: *GLint) #c_call;
    glGetActiveSubroutineUniformName : (program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: *GLsizei, name: *GLchar) #c_call;
    glGetActiveSubroutineName : (program: GLuint, shadertype: GLenum, index: GLuint, bufsize: GLsizei, length: *GLsizei, name: *GLchar) #c_call;
    glUniformSubroutinesuiv : (shadertype: GLenum, count: GLsizei, indices: *GLuint) #c_call;
    glGetUniformSubroutineuiv : (shadertype: GLenum, location: GLint, params: *GLuint) #c_call;
    glGetProgramStageiv : (program: GLuint, shadertype: GLenum, pname: GLenum, values: *GLint) #c_call;
    glPatchParameteri : (pname: GLenum, value: GLint) #c_call;
    glPatchParameterfv : (pname: GLenum, values: *GLfloat) #c_call;
    glBindTransformFeedback : (target: GLenum, id: GLuint) #c_call;
    glDeleteTransformFeedbacks : (n: GLsizei, ids: *GLuint) #c_call;
    glGenTransformFeedbacks : (n: GLsizei, ids: *GLuint) #c_call;
    glIsTransformFeedback : (id: GLuint) -> GLboolean #c_call;
    glPauseTransformFeedback : () #c_call;
    glResumeTransformFeedback : () #c_call;
    glDrawTransformFeedback : (mode: GLenum, id: GLuint) #c_call;
    glDrawTransformFeedbackStream : (mode: GLenum, id: GLuint, stream: GLuint) #c_call;
    glBeginQueryIndexed : (target: GLenum, index: GLuint, id: GLuint) #c_call;
    glEndQueryIndexed : (target: GLenum, index: GLuint) #c_call;
    glGetQueryIndexediv : (target: GLenum, index: GLuint, pname: GLenum, params: *GLint) #c_call;

    // GL_VERSION_4_1
    glReleaseShaderCompiler : () #c_call;
    glShaderBinary : (count: GLsizei, shaders: *GLuint, binaryformat: GLenum, binary: *void, length: GLsizei) #c_call;
    glGetShaderPrecisionFormat : (shadertype: GLenum, precisiontype: GLenum, range: *GLint, precision: *GLint) #c_call;
    glDepthRangef : (n: GLfloat, f: GLfloat) #c_call;
    glClearDepthf : (d: GLfloat) #c_call;
    glGetProgramBinary : (program: GLuint, bufSize: GLsizei, length: *GLsizei, binaryFormat: *GLenum, binary: *void) #c_call;
    glProgramBinary : (program: GLuint, binaryFormat: GLenum, binary: *void, length: GLsizei) #c_call;
    glProgramParameteri : (program: GLuint, pname: GLenum, value: GLint) #c_call;
    glUseProgramStages : (pipeline: GLuint, stages: GLbitfield, program: GLuint) #c_call;
    glActiveShaderProgram : (pipeline: GLuint, program: GLuint) #c_call;
    glCreateShaderProgramv : (type: GLenum, count: GLsizei, strings: **GLchar) -> GLuint #c_call;
    glBindProgramPipeline : (pipeline: GLuint) #c_call;
    glDeleteProgramPipelines : (n: GLsizei, pipelines: *GLuint) #c_call;
    glGenProgramPipelines : (n: GLsizei, pipelines: *GLuint) #c_call;
    glIsProgramPipeline : (pipeline: GLuint) -> GLboolean #c_call;
    glGetProgramPipelineiv : (pipeline: GLuint, pname: GLenum, params: *GLint) #c_call;
    // glProgramParameteri : (program: GLuint, pname: GLenum, value: GLint) #c_call;
    glProgramUniform1i : (program: GLuint, location: GLint, v0: GLint) #c_call;
    glProgramUniform1iv : (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform1f : (program: GLuint, location: GLint, v0: GLfloat) #c_call;
    glProgramUniform1fv : (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform1d : (program: GLuint, location: GLint, v0: GLdouble) #c_call;
    glProgramUniform1dv : (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform1ui : (program: GLuint, location: GLint, v0: GLuint) #c_call;
    glProgramUniform1uiv : (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniform2i : (program: GLuint, location: GLint, v0: GLint, v1: GLint) #c_call;
    glProgramUniform2iv : (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform2f : (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) #c_call;
    glProgramUniform2fv : (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform2d : (program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble) #c_call;
    glProgramUniform2dv : (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform2ui : (program: GLuint, location: GLint, v0: GLuint, v1: GLuint) #c_call;
    glProgramUniform2uiv : (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniform3i : (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) #c_call;
    glProgramUniform3iv : (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform3f : (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) #c_call;
    glProgramUniform3fv : (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform3d : (program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble) #c_call;
    glProgramUniform3dv : (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform3ui : (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) #c_call;
    glProgramUniform3uiv : (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniform4i : (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) #c_call;
    glProgramUniform4iv : (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform4f : (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) #c_call;
    glProgramUniform4fv : (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform4d : (program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, v3: GLdouble) #c_call;
    glProgramUniform4dv : (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform4ui : (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) #c_call;
    glProgramUniform4uiv : (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniformMatrix2fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix3fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix4fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix2dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix3dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix4dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix2x3fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix3x2fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix2x4fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix4x2fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix3x4fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix4x3fv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix2x3dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix3x2dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix2x4dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix4x2dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix3x4dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix4x3dv : (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glValidateProgramPipeline : (pipeline: GLuint) #c_call;
    glGetProgramPipelineInfoLog : (pipeline: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) #c_call;
    glVertexAttribL1d : (index: GLuint, x: GLdouble) #c_call;
    glVertexAttribL2d : (index: GLuint, x: GLdouble, y: GLdouble) #c_call;
    glVertexAttribL3d : (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glVertexAttribL4d : (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) #c_call;
    glVertexAttribL1dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttribL2dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttribL3dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttribL4dv : (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttribLPointer : (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glGetVertexAttribLdv : (index: GLuint, pname: GLenum, params: *GLdouble) #c_call;
    glViewportArrayv : (first: GLuint, count: GLsizei, v: *GLfloat) #c_call;
    glViewportIndexedf : (index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat) #c_call;
    glViewportIndexedfv : (index: GLuint, v: *GLfloat) #c_call;
    glScissorArrayv : (first: GLuint, count: GLsizei, v: *GLint) #c_call;
    glScissorIndexed : (index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei) #c_call;
    glScissorIndexedv : (index: GLuint, v: *GLint) #c_call;
    glDepthRangeArrayv : (first: GLuint, count: GLsizei, v: *GLdouble) #c_call;
    glDepthRangeIndexed : (index: GLuint, n: GLdouble, f: GLdouble) #c_call;
    glGetFloati_v : (target: GLenum, index: GLuint, data: *GLfloat) #c_call;
    glGetDoublei_v : (target: GLenum, index: GLuint, data: *GLdouble) #c_call;

    // GL_VERSION_4_2
    glDrawArraysInstancedBaseInstance : (mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint) #c_call;
    glDrawElementsInstancedBaseInstance : (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, instancecount: GLsizei, baseinstance: GLuint) #c_call;
    glDrawElementsInstancedBaseVertexBaseInstance : (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint) #c_call;
    glGetInternalformativ : (target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: *GLint) #c_call;
    glGetActiveAtomicCounterBufferiv : (program: GLuint, bufferIndex: GLuint, pname: GLenum, params: *GLint) #c_call;
    glBindImageTexture : (unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum) #c_call;
    glMemoryBarrier : (barriers: GLbitfield) #c_call;
    glTexStorage1D : (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei) #c_call;
    glTexStorage2D : (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glTexStorage3D : (target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) #c_call;
    glDrawTransformFeedbackInstanced : (mode: GLenum, id: GLuint, instancecount: GLsizei) #c_call;
    glDrawTransformFeedbackStreamInstanced : (mode: GLenum, id: GLuint, stream: GLuint, instancecount: GLsizei) #c_call;

    // GL_VERSION_4_3
    glClearBufferData : (target: GLenum, internalformat: GLenum, format: GLenum, type: GLenum, data: *void) #c_call;
    glClearBufferSubData : (target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: *void) #c_call;
    glDispatchCompute : (num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint) #c_call;
    glDispatchComputeIndirect : (indirect: GLintptr) #c_call;
    glCopyImageSubData : (srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei) #c_call;
    glFramebufferParameteri : (target: GLenum, pname: GLenum, param: GLint) #c_call;
    glGetFramebufferParameteriv : (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetInternalformati64v : (target: GLenum, internalformat: GLenum, pname: GLenum, bufSize: GLsizei, params: *GLint64) #c_call;
    glInvalidateTexSubImage : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei) #c_call;
    glInvalidateTexImage : (texture: GLuint, level: GLint) #c_call;
    glInvalidateBufferSubData : (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) #c_call;
    glInvalidateBufferData : (buffer: GLuint) #c_call;
    glInvalidateFramebuffer : (target: GLenum, numAttachments: GLsizei, attachments: *GLenum) #c_call;
    glInvalidateSubFramebuffer : (target: GLenum, numAttachments: GLsizei, attachments: *GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glMultiDrawArraysIndirect : (mode: GLenum, indirect: *void, drawcount: GLsizei, stride: GLsizei) #c_call;
    glMultiDrawElementsIndirect : (mode: GLenum, type: GLenum, indirect: *void, drawcount: GLsizei, stride: GLsizei) #c_call;
    glGetProgramInterfaceiv : (program: GLuint, programInterface: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetProgramResourceIndex : (program: GLuint, programInterface: GLenum, name: *GLchar) -> GLuint #c_call;
    glGetProgramResourceName : (program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: *GLsizei, name: *GLchar) #c_call;
    glGetProgramResourceiv : (program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: *GLenum, bufSize: GLsizei, length: *GLsizei, params: *GLint) #c_call;
    glGetProgramResourceLocation : (program: GLuint, programInterface: GLenum, name: *GLchar) -> GLint #c_call;
    glGetProgramResourceLocationIndex : (program: GLuint, programInterface: GLenum, name: *GLchar) -> GLint #c_call;
    glShaderStorageBlockBinding : (program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint) #c_call;
    glTexBufferRange : (target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glTexStorage2DMultisample : (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTexStorage3DMultisample : (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTextureView : (texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint) #c_call;
    glBindVertexBuffer : (bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) #c_call;
    glVertexAttribFormat : (attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) #c_call;
    glVertexAttribIFormat : (attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    glVertexAttribLFormat : (attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    glVertexAttribBinding : (attribindex: GLuint, bindingindex: GLuint) #c_call;
    glVertexBindingDivisor : (bindingindex: GLuint, divisor: GLuint) #c_call;
    glDebugMessageControl : (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    glDebugMessageInsert : (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    glDebugMessageCallback : (callback: GLDEBUGPROC, userParam: *void) #c_call;
    glGetDebugMessageLog : (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;
    glPushDebugGroup : (source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) #c_call;
    glPopDebugGroup : () #c_call;
    glObjectLabel : (identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectLabel : (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    glObjectPtrLabel : (ptr: *void, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectPtrLabel : (ptr: *void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;

    // GL_VERSION_4_4
    glBufferStorage : (target: GLenum, size: GLsizeiptr, data: *void, flags: GLbitfield) #c_call;
    glClearTexImage : (texture: GLuint, level: GLint, format: GLenum, type: GLenum, data: *void) #c_call;
    glClearTexSubImage : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, data: *void) #c_call;
    glBindBuffersBase : (target: GLenum, first: GLuint, count: GLsizei, buffers: *GLuint) #c_call;
    glBindBuffersRange : (target: GLenum, first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, sizes: *GLsizeiptr) #c_call;
    glBindTextures : (first: GLuint, count: GLsizei, textures: *GLuint) #c_call;
    glBindSamplers : (first: GLuint, count: GLsizei, samplers: *GLuint) #c_call;
    glBindImageTextures : (first: GLuint, count: GLsizei, textures: *GLuint) #c_call;
    glBindVertexBuffers : (first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, strides: *GLsizei) #c_call;

    // GL_VERSION_4_5
    glClipControl : (origin: GLenum, depth: GLenum) #c_call;
    glCreateTransformFeedbacks : (n: GLsizei, ids: *GLuint) #c_call;
    glTransformFeedbackBufferBase : (xfb: GLuint, index: GLuint, buffer: GLuint) #c_call;
    glTransformFeedbackBufferRange : (xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glGetTransformFeedbackiv : (xfb: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetTransformFeedbacki_v : (xfb: GLuint, pname: GLenum, index: GLuint, param: *GLint) #c_call;
    glGetTransformFeedbacki64_v : (xfb: GLuint, pname: GLenum, index: GLuint, param: *GLint64) #c_call;
    glCreateBuffers : (n: GLsizei, buffers: *GLuint) #c_call;
    glNamedBufferStorage : (buffer: GLuint, size: GLsizeiptr, data: *void, flags: GLbitfield) #c_call;
    glNamedBufferData : (buffer: GLuint, size: GLsizeiptr, data: *void, usage: GLenum) #c_call;
    glNamedBufferSubData : (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glCopyNamedBufferSubData : (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) #c_call;
    glClearNamedBufferData : (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: *void) #c_call;
    glClearNamedBufferSubData : (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: *void) #c_call;
    glMapNamedBuffer : (buffer: GLuint, access: GLenum) -> *void #c_call;
    glMapNamedBufferRange : (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *void #c_call;
    glUnmapNamedBuffer : (buffer: GLuint) -> GLboolean #c_call;
    glFlushMappedNamedBufferRange : (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) #c_call;
    glGetNamedBufferParameteriv : (buffer: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetNamedBufferParameteri64v : (buffer: GLuint, pname: GLenum, params: *GLint64) #c_call;
    glGetNamedBufferPointerv : (buffer: GLuint, pname: GLenum, params: **void) #c_call;
    glGetNamedBufferSubData : (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glCreateFramebuffers : (n: GLsizei, framebuffers: *GLuint) #c_call;
    glNamedFramebufferRenderbuffer : (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) #c_call;
    glNamedFramebufferParameteri : (framebuffer: GLuint, pname: GLenum, param: GLint) #c_call;
    glNamedFramebufferTexture : (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) #c_call;
    glNamedFramebufferTextureLayer : (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) #c_call;
    glNamedFramebufferDrawBuffer : (framebuffer: GLuint, buf: GLenum) #c_call;
    glNamedFramebufferDrawBuffers : (framebuffer: GLuint, n: GLsizei, bufs: *GLenum) #c_call;
    glNamedFramebufferReadBuffer : (framebuffer: GLuint, src: GLenum) #c_call;
    glInvalidateNamedFramebufferData : (framebuffer: GLuint, numAttachments: GLsizei, attachments: *GLenum) #c_call;
    glInvalidateNamedFramebufferSubData : (framebuffer: GLuint, numAttachments: GLsizei, attachments: *GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glClearNamedFramebufferiv : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLint) #c_call;
    glClearNamedFramebufferuiv : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLuint) #c_call;
    glClearNamedFramebufferfv : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLfloat) #c_call;
    glClearNamedFramebufferfi : (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) #c_call;
    glBlitNamedFramebuffer : (readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) #c_call;
    glCheckNamedFramebufferStatus : (framebuffer: GLuint, target: GLenum) -> GLenum #c_call;
    glGetNamedFramebufferParameteriv : (framebuffer: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetNamedFramebufferAttachmentParameteriv : (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: *GLint) #c_call;
    glCreateRenderbuffers : (n: GLsizei, renderbuffers: *GLuint) #c_call;
    glNamedRenderbufferStorage : (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glNamedRenderbufferStorageMultisample : (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glGetNamedRenderbufferParameteriv : (renderbuffer: GLuint, pname: GLenum, params: *GLint) #c_call;
    glCreateTextures : (target: GLenum, n: GLsizei, textures: *GLuint) #c_call;
    glTextureBuffer : (texture: GLuint, internalformat: GLenum, buffer: GLuint) #c_call;
    glTextureBufferRange : (texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glTextureStorage1D : (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei) #c_call;
    glTextureStorage2D : (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glTextureStorage3D : (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) #c_call;
    glTextureStorage2DMultisample : (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTextureStorage3DMultisample : (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTextureSubImage1D : (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTextureSubImage2D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTextureSubImage3D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glCompressedTextureSubImage1D : (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTextureSubImage2D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTextureSubImage3D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCopyTextureSubImage1D : (texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) #c_call;
    glCopyTextureSubImage2D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glCopyTextureSubImage3D : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glTextureParameterf : (texture: GLuint, pname: GLenum, param: GLfloat) #c_call;
    glTextureParameterfv : (texture: GLuint, pname: GLenum, param: *GLfloat) #c_call;
    glTextureParameteri : (texture: GLuint, pname: GLenum, param: GLint) #c_call;
    glTextureParameterIiv : (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    glTextureParameterIuiv : (texture: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glTextureParameteriv : (texture: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGenerateTextureMipmap : (texture: GLuint) #c_call;
    glBindTextureUnit : (unit: GLuint, texture: GLuint) #c_call;
    glGetTextureImage : (texture: GLuint, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: *void) #c_call;
    glGetCompressedTextureImage : (texture: GLuint, level: GLint, bufSize: GLsizei, pixels: *void) #c_call;
    glGetTextureLevelParameterfv : (texture: GLuint, level: GLint, pname: GLenum, params: *GLfloat) #c_call;
    glGetTextureLevelParameteriv : (texture: GLuint, level: GLint, pname: GLenum, params: *GLint) #c_call;
    glGetTextureParameterfv : (texture: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    glGetTextureParameterIiv : (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetTextureParameterIuiv : (texture: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glGetTextureParameteriv : (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    glCreateVertexArrays : (n: GLsizei, arrays: *GLuint) #c_call;
    glDisableVertexArrayAttrib : (vaobj: GLuint, index: GLuint) #c_call;
    glEnableVertexArrayAttrib : (vaobj: GLuint, index: GLuint) #c_call;
    glVertexArrayElementBuffer : (vaobj: GLuint, buffer: GLuint) #c_call;
    glVertexArrayVertexBuffer : (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) #c_call;
    glVertexArrayVertexBuffers : (vaobj: GLuint, first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, strides: *GLsizei) #c_call;
    glVertexArrayAttribBinding : (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) #c_call;
    glVertexArrayAttribFormat : (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) #c_call;
    glVertexArrayAttribIFormat : (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    glVertexArrayAttribLFormat : (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    glVertexArrayBindingDivisor : (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) #c_call;
    glGetVertexArrayiv : (vaobj: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetVertexArrayIndexediv : (vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetVertexArrayIndexed64iv : (vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint64) #c_call;
    glCreateSamplers : (n: GLsizei, samplers: *GLuint) #c_call;
    glCreateProgramPipelines : (n: GLsizei, pipelines: *GLuint) #c_call;
    glCreateQueries : (target: GLenum, n: GLsizei, ids: *GLuint) #c_call;
    glGetQueryBufferObjecti64v : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glGetQueryBufferObjectiv : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glGetQueryBufferObjectui64v : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glGetQueryBufferObjectuiv : (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glMemoryBarrierByRegion : (barriers: GLbitfield) #c_call;
    glGetTextureSubImage : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: *void) #c_call;
    glGetCompressedTextureSubImage : (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, bufSize: GLsizei, pixels: *void) #c_call;
    glGetGraphicsResetStatus : () -> GLenum #c_call;
    glGetnCompressedTexImage : (target: GLenum, lod: GLint, bufSize: GLsizei, pixels: *void) #c_call;
    glGetnTexImage : (target: GLenum, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: *void) #c_call;
    glGetnUniformdv : (program: GLuint, location: GLint, bufSize: GLsizei, params: *GLdouble) #c_call;
    glGetnUniformfv : (program: GLuint, location: GLint, bufSize: GLsizei, params: *GLfloat) #c_call;
    glGetnUniformiv : (program: GLuint, location: GLint, bufSize: GLsizei, params: *GLint) #c_call;
    glGetnUniformuiv : (program: GLuint, location: GLint, bufSize: GLsizei, params: *GLuint) #c_call;
    glReadnPixels : (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, bufSize: GLsizei, data: *void) #c_call;
    glGetnMapdv : (target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLdouble) #c_call;
    glGetnMapfv : (target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLfloat) #c_call;
    glGetnMapiv : (target: GLenum, query: GLenum, bufSize: GLsizei, v: *GLint) #c_call;
    glGetnPixelMapfv : (map: GLenum, bufSize: GLsizei, values: *GLfloat) #c_call;
    glGetnPixelMapuiv : (map: GLenum, bufSize: GLsizei, values: *GLuint) #c_call;
    glGetnPixelMapusv : (map: GLenum, bufSize: GLsizei, values: *GLushort) #c_call;
    glGetnPolygonStipple : (bufSize: GLsizei, pattern: *GLubyte) #c_call;
    glGetnColorTable : (target: GLenum, format: GLenum, type: GLenum, bufSize: GLsizei, table: *void) #c_call;
    glGetnConvolutionFilter : (target: GLenum, format: GLenum, type: GLenum, bufSize: GLsizei, image: *void) #c_call;
    glGetnSeparableFilter : (target: GLenum, format: GLenum, type: GLenum, rowBufSize: GLsizei, row: *void, columnBufSize: GLsizei, column: *void, span: *void) #c_call;
    glGetnHistogram : (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, bufSize: GLsizei, values: *void) #c_call;
    glGetnMinmax : (target: GLenum, reset: GLboolean, format: GLenum, type: GLenum, bufSize: GLsizei, values: *void) #c_call;
    glTextureBarrier : () #c_call;

    // GL_VERSION_4_6
    glSpecializeShader : (shader: GLuint, pEntryPoint: *GLchar, numSpecializationConstants: GLuint, pConstantIndex: *GLuint, pConstantValue: *GLuint) #c_call;
    glMultiDrawArraysIndirectCount : (mode: GLenum, indirect: *void, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) #c_call;
    glMultiDrawElementsIndirectCount : (mode: GLenum, type: GLenum, indirect: *void, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei) #c_call;
    glPolygonOffsetClamp : (factor: GLfloat, units: GLfloat, clamp: GLfloat) #c_call;

    // Extension functions:

    // GL_ARB_clip_control
    // glClipControl : (origin: GLenum, depth: GLenum) #c_call;

    // GL_ARB_debug_output
    glDebugMessageControlARB : (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    glDebugMessageInsertARB : (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    glDebugMessageCallbackARB : (callback: GLDEBUGPROCARB, userParam: *void) #c_call;
    glGetDebugMessageLogARB : (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;

    // GL_AMD_vertex_shader_viewport_index

    // GL_EXT_debug_label
    glLabelObjectEXT : (type: GLenum, object: GLuint, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectLabelEXT : (type: GLenum, object: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;

    // GL_EXT_debug_marker
    glInsertEventMarkerEXT : (length: GLsizei, marker: *GLchar) #c_call;
    glPushGroupMarkerEXT : (length: GLsizei, marker: *GLchar) #c_call;
    glPopGroupMarkerEXT : () #c_call;

    // GL_KHR_debug
    glGetPointerv : (pname: GLenum, params: **void) #c_call;
    glDebugMessageControlKHR : (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    glDebugMessageInsertKHR : (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    glDebugMessageCallbackKHR : (callback: GLDEBUGPROCKHR, userParam: *void) #c_call;
    glGetDebugMessageLogKHR : (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;
    glPushDebugGroupKHR : (source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) #c_call;
    glPopDebugGroupKHR : () #c_call;
    glObjectLabelKHR : (identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectLabelKHR : (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    glObjectPtrLabelKHR : (ptr: *void, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectPtrLabelKHR : (ptr: *void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    glGetPointervKHR : (pname: GLenum, params: **void) #c_call;

    // GL_NV_depth_buffer_float
    glDepthRangedNV : (zNear: GLdouble, zFar: GLdouble) #c_call;
    glClearDepthdNV : (depth: GLdouble) #c_call;
    glDepthBoundsdNV : (zmin: GLdouble, zmax: GLdouble) #c_call;

    glXSwapIntervalEXT : (dpy: *void, draw: u64, interval: s32) -> s32 #c_call;
    glXSwapIntervalSGI : (interval: s32) -> s32 #c_call;
    glXSwapIntervalMESA : (interval: s32) -> s32 #c_call;

    // Extension flags:

    GL_ARB_clip_control : bool;
    GL_ARB_debug_output : bool;
    GL_ARB_direct_state_access : bool;
    GL_ARB_parallel_shader_compile : bool;
    GL_ARB_sampler_objects : bool;
    GL_ARB_seamless_cube_map : bool;
    GL_ARB_shader_viewport_layer_array : bool;
    GL_ARB_texture_storage : bool;
    GL_ARB_vertex_attrib_binding : bool;
    GL_AMD_vertex_shader_viewport_index : bool;
    GL_EXT_debug_label : bool;
    GL_EXT_debug_marker : bool;
    GL_EXT_texture_compression_latc : bool;
    GL_EXT_texture_compression_rgtc : bool;
    GL_EXT_texture_compression_s3tc : bool;
    GL_EXT_texture_filter_anisotropic : bool;
    GL_EXT_texture_sRGB : bool;
    GL_KHR_debug : bool;
    GL_NV_depth_buffer_float : bool;
    GL_S3_s3tc : bool;
}
